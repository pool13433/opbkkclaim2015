/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.claim.ui;

import com.claim.component.HeaderRenderer;
import com.claim.controller.CreateDataStoreController;
import com.claim.controller.LogAppController;
import com.claim.controller.PaymentStatusController;
import com.claim.dao.UtilDao;
import com.claim.object.ObjPaymentResult;
import com.claim.object.ObjPaymentStatus;
import com.claim.support.BaseFunction;
import com.claim.support.Console;
import com.claim.support.Constants;
import com.claim.support.NetUtils;
import com.claim.support.Picker;
import com.claim.support.ProgrameStatus;
import com.claim.dialog.DialogWaitProcess;
import com.claim.object.Obj_log_stamp_payment;
import com.claim.support.DateUtil;
import java.awt.event.ItemEvent;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Poolsawat.a
 */
public class UiStampPayment extends javax.swing.JInternalFrame {

    /**
     * Creates new form UiStampPayment
     */
    DefaultTableModel modelPayment = new DefaultTableModel();
    private PaymentStatusController paymentStatusController;
    private CreateDataStoreController createStoreController;
    List<ObjPaymentResult> listPaySta = null;
    private int lengthYear = 3;
    final static String DATE_FORMAT = "dd-mm-yyyy";    

    public UiStampPayment() {
        initComponents();
        listPaySta = new ArrayList<ObjPaymentResult>();
        paymentStatusController = new PaymentStatusController();
        createStoreController = new CreateDataStoreController();
        modelPayment = (DefaultTableModel) table_payment_result.getModel();

        loadComboCriteriaYear();
        loadComboPaymentStatus();
        txt_payment_dateopd.setText(DateUtil.DATE_CURRENT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioGroupLook = new javax.swing.ButtonGroup();
        panel_payment = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txt_payment_dateopd = new javax.swing.JTextField();
        btn_payment_dateopd = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        btn_payment_process = new javax.swing.JButton();
        txt_payment_ofcode = new javax.swing.JTextField();
        txt_paymentYMNO = new javax.swing.JTextField();
        jScrollPane13 = new javax.swing.JScrollPane();
        table_payment_result = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        combo_criteria_year = new javax.swing.JComboBox();
        jLabel36 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        combo_payment_type = new javax.swing.JComboBox();
        radio_lookpay_all = new javax.swing.JRadioButton();
        radio_lookpay_true = new javax.swing.JRadioButton();
        radio_lookpay_false = new javax.swing.JRadioButton();
        txt_payment_ofcodefix = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("หน้าจปรับสถานะการจ่ายเงิน");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/Excel-icon.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 550));

        panel_payment.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "หน้า ทำรายการแจ้งสถานะจ่ายเงิน ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 24))); // NOI18N

        jLabel24.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel24.setText("งวดที่ต้องการแสดงสถานะการจ่ายเงิน");

        jLabel25.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel25.setText("วันที่โอน");

        txt_payment_dateopd.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        txt_payment_dateopd.setEnabled(false);

        btn_payment_dateopd.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        btn_payment_dateopd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/carlendar16x16.png"))); // NOI18N
        btn_payment_dateopd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_payment_dateopdMouseClicked(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel26.setText("เลขที่");

        btn_payment_process.setBackground(new java.awt.Color(102, 255, 102));
        btn_payment_process.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        btn_payment_process.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/make-icon-16px.png"))); // NOI18N
        btn_payment_process.setText("ตกลง");
        btn_payment_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_payment_processActionPerformed(evt);
            }
        });

        txt_payment_ofcode.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N

        txt_paymentYMNO.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        txt_paymentYMNO.setEnabled(false);

        jScrollPane13.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane13.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane13.setAutoscrolls(true);
        jScrollPane13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jScrollPane13KeyReleased(evt);
            }
        });

        table_payment_result.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        table_payment_result.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "งวด", "จำนวนเงินที่จ่าย", "จำนวนเคส", "วันที่โอน", "เลขที่", "วันที่ stamp ผ่านโปรแกรม", "สถานะ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_payment_result.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_payment_resultMouseClicked(evt);
            }
        });
        table_payment_result.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_payment_resultKeyReleased(evt);
            }
        });
        jScrollPane13.setViewportView(table_payment_result);

        jLabel35.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel35.setText("งวดที่เลือก");

        combo_criteria_year.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        combo_criteria_year.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_criteria_yearItemStateChanged(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel36.setText("แยกตามปี");

        btnSearch.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/Search-icon.png"))); // NOI18N
        btnSearch.setText("ดูงวดจ่ายเงิน");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "เงื่อนไขการดูข้อมูล", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 24), java.awt.Color.blue)); // NOI18N

        jLabel23.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel23.setText("กลุ่มรายงาน");

        combo_payment_type.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        combo_payment_type.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_payment_typeItemStateChanged(evt);
            }
        });

        radioGroupLook.add(radio_lookpay_all);
        radio_lookpay_all.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        radio_lookpay_all.setForeground(java.awt.Color.red);
        radio_lookpay_all.setText("รอปรับสถานะ/ปรับสถานะเรียบร้อย");

        radioGroupLook.add(radio_lookpay_true);
        radio_lookpay_true.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        radio_lookpay_true.setForeground(java.awt.Color.red);
        radio_lookpay_true.setText("ปรับสถานะเรียบร้อย");

        radioGroupLook.add(radio_lookpay_false);
        radio_lookpay_false.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        radio_lookpay_false.setForeground(java.awt.Color.red);
        radio_lookpay_false.setSelected(true);
        radio_lookpay_false.setText("รอปรับสถานะ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addComponent(combo_payment_type, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radio_lookpay_false)
                .addGap(18, 18, 18)
                .addComponent(radio_lookpay_true)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radio_lookpay_all))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radio_lookpay_all)
                        .addComponent(radio_lookpay_true)
                        .addComponent(radio_lookpay_false))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(combo_payment_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23)))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        txt_payment_ofcodefix.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        txt_payment_ofcodefix.setText("สปสช.5.42/");
        txt_payment_ofcodefix.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("xx/xxxxx");

        javax.swing.GroupLayout panel_paymentLayout = new javax.swing.GroupLayout(panel_payment);
        panel_payment.setLayout(panel_paymentLayout);
        panel_paymentLayout.setHorizontalGroup(
            panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_paymentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_paymentLayout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panel_paymentLayout.createSequentialGroup()
                        .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_paymentLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane13))
                        .addContainerGap())))
            .addGroup(panel_paymentLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_paymentLayout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(txt_payment_dateopd, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_payment_dateopd))
                    .addGroup(panel_paymentLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(288, 288, 288)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_payment_ofcodefix, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addComponent(txt_payment_ofcode))
                .addGap(137, 137, 137)
                .addComponent(btn_payment_process, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(panel_paymentLayout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(txt_paymentYMNO, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 741, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_paymentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel36)
                .addGap(26, 26, 26)
                .addComponent(combo_criteria_year, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panel_paymentLayout.setVerticalGroup(
            panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_paymentLayout.createSequentialGroup()
                .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_paymentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, 0)
                .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_paymentLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(combo_criteria_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(txt_paymentYMNO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_paymentLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel25)
                                .addComponent(txt_payment_dateopd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_payment_dateopd)
                            .addGroup(panel_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel26)
                                .addComponent(txt_payment_ofcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_payment_ofcodefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(panel_paymentLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btn_payment_process, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_payment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_payment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combo_payment_typeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_payment_typeItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {

        }
    }//GEN-LAST:event_combo_payment_typeItemStateChanged

    private void btn_payment_dateopdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_payment_dateopdMouseClicked
        HashMap mapParam = new HashMap();
        mapParam.put("btn", btn_payment_dateopd);
        mapParam.put("txt", txt_payment_dateopd);
        mapParam.put("panel", panel_payment);
        mapParam.put("formatDate", DateUtil.DATE_FORMAT);
        new Picker().PickerJInternal(this, mapParam);
    }//GEN-LAST:event_btn_payment_dateopdMouseClicked
    private void loadComboCriteriaYear() {
        combo_criteria_year.removeAllItems();
        int[] arrYear = BaseFunction.INDEX_YEAR(lengthYear);
        combo_criteria_year.addItem(new String("ดูทั้งหมด"));
        for (int i = 0; i < arrYear.length; i++) {
            combo_criteria_year.addItem(arrYear[i]);
        }
    }
    private void btn_payment_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_payment_processActionPerformed
        final DialogWaitProcess frm = new DialogWaitProcess();
        if (combo_payment_type.getSelectedIndex() != 0) { // check
            if (!txt_paymentYMNO.getText().isEmpty()) {  // check
                /*  if (!txt_payment_dateopd.getText().isEmpty()) {  // check */
                if (!txt_payment_ofcode.getText().isEmpty()) {
                    int selectOption = JOptionPane.showConfirmDialog(this,
                            "ยืนยันการประมวลผลโปรแกรม",
                            "Processing...", JOptionPane.YES_NO_OPTION);
                    if (selectOption == JOptionPane.YES_OPTION) {
                        frm.setVisible(true);
                        Thread thread = new Thread(new Runnable() {
                            @Override
                            public void run() {
                                ProgrameStatus status = new ProgrameStatus();
                                status = paymentStatusController.startRunStore(setParameterPaymentStatus());
                                
                                Console.LOG(status.getTitle(), 1);
                                Console.LOG(status.getMessage(), 1);
                                 Obj_log_stamp_payment obj_Log = new PaymentStatusController().getLastLog();
                                if(obj_Log == null){
                                    obj_Log = new Obj_log_stamp_payment();
                                }
                                Console.LOG("ประเภทรายงาน :: "+obj_Log.getRpt_name(),1);
                                Console.LOG("จำนวนข้อมูล :: "+String.valueOf(obj_Log.getN_record()),1);
                                Console.LOG("ผลการทำงาน :: "+obj_Log.getResult(),1);
                                Console.LOG("อธิบายทำงานของโปรแกรม :: "+obj_Log.getDescription(),1);
                                loadTablePaymentResult(null);
                                frm.setVisible(false);
                                /*
                                 GET LOG_STAMP_APYMENT
                                */
                                try {
                                    String desc = " รายงานการจ่ายเงิน " + BaseFunction.PROCE_TABLE_PAYMENT[combo_payment_type.getSelectedIndex()];
                                    desc += " โดยมาการส่งค่า งวดที่เลือก " + txt_paymentYMNO.getText() + " วันที่โอน " + txt_payment_dateopd.getText();
                                    desc += " เลขที่ " + txt_payment_ofcode.getText();
                                    new LogAppController().createLog("ทำการปรับสถานะการจ่ายเงิน", desc, NetUtils.getIpAddress(), 1);
                                } catch (UnknownHostException ex) {
                                    Logger.getLogger(UiMainClaim.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                btnSearchActionPerformed(null);
                            }
                        });
                        thread.start();
                    }
                } else {
                    JOptionPane.showMessageDialog(this,
                            "กรุณากรอก เลขที่",
                            Constants.MSG_SELECT_DATA,
                            JOptionPane.ERROR_MESSAGE);
                }
                /*  } else {
                 JOptionPane.showMessageDialog(this,
                 "กรุณาเลือก วันที่ต้องการจะโอน",
                 Constants.MSG_SELECT_DATA,
                 JOptionPane.ERROR_MESSAGE);
                 }*/
            } else {
                JOptionPane.showMessageDialog(this,
                        "กรุณาเลือก งวดที่ต้องการจะจ่ายเงิน",
                        Constants.MSG_SELECT_DATA,
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "กรุณาเลือก OP Type",
                    Constants.MSG_SELECT_DATA,
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_payment_processActionPerformed

    private void table_payment_resultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_payment_resultMouseClicked
        int index = table_payment_result.getSelectedRow();
        String stmp = modelPayment.getValueAt(index, 0).toString();
        if (modelPayment.getValueAt(index, 6) == null) {
            txt_paymentYMNO.setText(stmp);
        } else {
            clearForm();
        }
    }//GEN-LAST:event_table_payment_resultMouseClicked

    private void table_payment_resultKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_payment_resultKeyReleased
        int index = table_payment_result.getSelectedRow();
        String stmp = modelPayment.getValueAt(index, 0).toString();
        if (modelPayment.getValueAt(index, 6) == null) {
            txt_paymentYMNO.setText(stmp);
        } else {
            txt_paymentYMNO.setText("");
        }
    }//GEN-LAST:event_table_payment_resultKeyReleased

    private void jScrollPane13KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane13KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane13KeyReleased

    private void combo_criteria_yearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_criteria_yearItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            loadTablePaymentResult(combo_criteria_year.getSelectedItem().toString());
        }
    }//GEN-LAST:event_combo_criteria_yearItemStateChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (combo_payment_type.getSelectedIndex() != 0) {
            modelPayment.setRowCount(0);
            final DialogWaitProcess frm = new DialogWaitProcess();
            frm.setVisible(true);
            frm.setTitle("กำลังโหลดข้อมูล กรุณา รอ...");
            Thread thread = new Thread(new Runnable() {
                @Override
                public void run() {
                    if (combo_payment_type.getSelectedIndex() > 0) {
                        ObjPaymentStatus objpaySta = new ObjPaymentStatus();
                        objpaySta.setPayment_type(combo_payment_type.getSelectedIndex());
                        if (radio_lookpay_true.isSelected()) {
                            objpaySta.setPayment_status(1);
                        } else if (radio_lookpay_false.isSelected()) {
                            objpaySta.setPayment_status(2);
                        } else {
                            objpaySta.setPayment_status(0);
                        }
                        objpaySta.setStmp(null);
                        listPaySta = paymentStatusController.getListPaymentResult(objpaySta);
                        loadTablePaymentResult(null);
                        clearForm();
                    }
                    loadComboCriteriaYear();
                    frm.setVisible(false);
                    txt_payment_dateopd.setText(DateUtil.DATE_CURRENT);
                }                
            });
            thread.start();
        } else {
            System.out.println("op type - ");
            modelPayment.setRowCount(0);
            table_payment_result.setModel(modelPayment);
        }
    }//GEN-LAST:event_btnSearchActionPerformed
    private void clearForm() {
        txt_payment_ofcode.setText("");
        txt_payment_dateopd.setText("");
        txt_paymentYMNO.setText("");
    }

    private void loadTablePaymentResult(String year) {
        try {
            modelPayment.setRowCount(0);
            if (listPaySta != null) {
                for (int i = 0; i < listPaySta.size(); i++) {
                    ObjPaymentResult objPaySta = listPaySta.get(i);

                    Vector vData = new Vector();
                    vData.add(objPaySta.getStmp_report());
                    vData.add(objPaySta.getPayment_money());
                    vData.add(objPaySta.getTotal_visit());
                    vData.add(objPaySta.getDate_of_tranfer());
                    vData.add(objPaySta.getNumber_of_tranfer());
                    vData.add(objPaySta.getCreate_date());
                    vData.add(objPaySta.getStatus());
                    //System.out.println("year:" + year);

                    if (year == null || year.equals("ดูทั้งหมด")) {
                        modelPayment.addRow(vData);
                    } else {
//                        System.out.println("year:" + year);
//                        System.out.println("objPaySta.getStmp_report().subSequence(0, 4):" + objPaySta.getStmp_report().subSequence(0, 4));
                        if (objPaySta.getStmp_report().subSequence(0, 4).equals(year)) {
                            modelPayment.addRow(vData);
                        }
                    }
                    table_payment_result.setRowHeight(i, 30);
                }
                table_payment_result.setModel(modelPayment);
                new HeaderRenderer().setWidthAsPercentages(table_payment_result, 0.10, 0.10, 0.10, 0.10, 0.15, 0.15, 0.20);
                Console.LOG("แสดงรายการจ่ายเงิน ", 1);
            }
        } catch (Exception e) {
            e.printStackTrace();
            Console.LOG(e.getMessage(), 0);
        }
    }

    private ObjPaymentStatus setParameterPaymentStatus() {
        ObjPaymentStatus objPay = new ObjPaymentStatus();
        objPay.setPayment_type(combo_payment_type.getSelectedIndex()); // 
        /*objPay.setStmp(
         combo_payment_stmpYear.getSelectedItem().toString()
         + combo_payment_stmpMounth.getSelectedItem()
         + "-"
         + combo_payment_stmpN.getSelectedItem());*/
        objPay.setStmp(txt_paymentYMNO.getText());
        objPay.setDate_opd(new DateUtil().changeDateFormat(txt_payment_dateopd.getText(), DateUtil.DATE_FORMAT, DateUtil.DATE_FORMAT_TO));
        objPay.setNumber_of_transfer(txt_payment_ofcodefix.getText() + txt_payment_ofcode.getText());
        return objPay;
    }

    private void loadComboPaymentStatus() {
        combo_payment_type.removeAllItems();
        String[] arrTable = BaseFunction.PROCE_TABLE_PAYMENT;
        for (int i = 0; i < arrTable.length; i++) { //for (String strTable : arrTable) {
            combo_payment_type.addItem(String.valueOf(i) + " : " + arrTable[i]);
        }

        combo_criteria_year.removeAllItems();
        int[] arrYear = BaseFunction.INDEX_YEAR(lengthYear);
        combo_criteria_year.addItem(new String("ดูทั้งหมด"));
        for (int i = 0; i < arrYear.length; i++) {
            combo_criteria_year.addItem(arrYear[i]);
        }

        /*int[] arrNo = baseFunction.Mnumber();
         for (int i : arrNo) {
         combo_payment_stmpN.addItem(i);
         }

         String[] arrMonth = baseFunction.INDEX_MONTH;
         for (int i = 0; i < arrMonth.length; i++) {
         combo_payment_stmpMounth.addItem(arrMonth[i]);
         }
         int[] arrYear = baseFunction.INDEX_YEAR(lengthYear);
         for (int i = 0; i < arrYear.length; i++) {
         combo_payment_stmpYear.addItem(arrYear[i]);
         }*/
        //combo_payment_stmpYear.setSelectedItem(Calendar.getInstance().get(Calendar.YEAR));
        //combo_payment_ofYear.setSelectedItem(Calendar.getInstance().get(Calendar.YEAR));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btn_payment_dateopd;
    private javax.swing.JButton btn_payment_process;
    private javax.swing.JComboBox combo_criteria_year;
    private javax.swing.JComboBox combo_payment_type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JPanel panel_payment;
    private javax.swing.ButtonGroup radioGroupLook;
    private javax.swing.JRadioButton radio_lookpay_all;
    private javax.swing.JRadioButton radio_lookpay_false;
    private javax.swing.JRadioButton radio_lookpay_true;
    private javax.swing.JTable table_payment_result;
    private javax.swing.JTextField txt_paymentYMNO;
    private javax.swing.JTextField txt_payment_dateopd;
    private javax.swing.JTextField txt_payment_ofcode;
    private javax.swing.JTextField txt_payment_ofcodefix;
    // End of variables declaration//GEN-END:variables
}
