package com.claim.controller;

import com.claim.dao.IndividualDAO;
import com.claim.dao.OppDAO;
import com.claim.object.HospitalService;
import com.claim.object.Obj_individual;
import com.claim.object.Obj_row_summary;
import com.claim.object.OppReport;
import com.claim.object.ResultBean;
import com.claim.support.BaseFunction;
import com.claim.support.Console;
import com.claim.support.Constants;
import com.claim.support.ProgrameStatus;
import com.claim.support.StringOpUtil;
import com.claim.ui.UiReportIndividual;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.util.CellRangeAddress;

public class OpIndividualController extends ExcellBaseUtil {

    private OppDAO dAO;
    private IndividualDAO indiDao;
    private BaseFunction function;

    //contructur method
    public OpIndividualController() {
        dAO = new OppDAO();
        indiDao = new IndividualDAO();
        function = new BaseFunction();
    }

    public ProgrameStatus op_individual_detail_SplitFile(OppReport report) {
        FileOutputStream out = null;
        FileInputStream file = null;
        ProgrameStatus programeStatus = new ProgrameStatus();
        List<HospitalService> listHospital = new ArrayList<HospitalService>();
        try {

            listHospital = indiDao.getHospitalService(report);

            System.out.println("Hospital_size==" + listHospital.size());

            if (!listHospital.isEmpty()) {

                for (int j = 0; j < listHospital.size(); j++) {
                    HospitalService objHospital = listHospital.get(j);

                    file = new FileInputStream(new File(".\\xls\\indivi_detail.xls"));

                    out = new FileOutputStream(report.getPathFile() + "\\individual_detail_" + report.getYearMonth() + "-" + report.getNo() + "_" + listHospital.get(j).getHosCode() + ".xls");

                    HSSFWorkbook wbIndivi = new HSSFWorkbook(file);
                    this.loadStyle(wbIndivi);

                    //System.out.println("hospitalService.getHosCode===>>" + listHospital.get(j).getHosCode());
                    String EXCELL_HEADER = UiReportIndividual.txtTitle1.getText() != null ? UiReportIndividual.txtTitle1.getText() : "รายละเอียดการจ่ายชดเชยค่าข้อมูลผู้ป่วยนอกรายบุคคล ปีงบประมาณ 2557";
                    String EXCELL_MONTH = UiReportIndividual.txtTitle2.getText() != null ? UiReportIndividual.txtTitle2.getText() : report.getTitle2();
                    String EXCELL_SERVICE = "หน่วยบริการ: " + objHospital.getHosName() + " (" + objHospital.getHosCode() + ")";

                    HSSFSheet sheet = wb.getSheetAt(0);
                    sheet.createFreezePane(3, 5);
                    sheet.setColumnWidth(10, WIDTH_TXID);

                    HSSFCell cell = null;
                    HSSFRow row = null;

                    // row 0
                    row = sheet.createRow(0);
                    row.setHeight((short) 390);
                    cell = row.createCell(0);
                    cell.setCellValue(EXCELL_HEADER);
                    sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 9));
                    cell.setCellStyle(csHead);

                    // row 1
                    row = sheet.createRow(1);
                    row.setHeight((short) 390);
                    cell = row.createCell(0);
                    cell.setCellValue(EXCELL_MONTH);
                    sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 9));
                    cell.setCellStyle(csHead);

                    // row 2
                    row = sheet.createRow(2);
                    row.setHeight((short) 390);
                    cell = row.createCell(0);
                    cell.setCellValue(EXCELL_SERVICE);
                    sheet.addMergedRegion(new CellRangeAddress(2, 2, 0, 9));
                    cell.setCellStyle(csHead);

                    //row 4 ตัวเนื้อหา
                    int curRow = 5;
                    int i = 1;
                    ResultSet rs = null;

                    try {
                        report.setServiceCode(objHospital.getHosCode().toString());
                        rs = indiDao.getReportIndividual(report);

                        while (rs.next()) {
                            int vNo = rs.getInt("no");
                            String vPID = rs.getString("PID");
                            String vPNAME = rs.getString("PNAME");
                            String vHN = rs.getString("HN");
                            String vDATEOPD = rs.getString("DATEOPD");
                            String vDateOpdTh = rs.getString("dateopd_thai_buddha");
                            String vSendDateTh = rs.getString("SENDDATE_thai_buddha");
                            String vOptypename = rs.getString("optypename");
                            String vSENDDATE = rs.getString("SENDDATE");
                            String vINDV_LATE = rs.getString("INDV_LATE");
                            String vMAININSCL = rs.getString("MAININSCL");
                            double vTOTALREIMBURSE = rs.getDouble("TOTALREIMBURSE");
                            String vTxid = rs.getString("txid");

                            row = sheet.createRow(curRow);
                            row.setHeight((short) 360);
                            cell = row.createCell(0);
                            cell.setCellValue(i);
                            cell.setCellStyle(csNum4);

                            cell = row.createCell(1);
                            cell.setCellValue(function.subStringPid(vPID));
                            cell.setCellStyle(csDetailPid);

                            cell = row.createCell(2);
                            cell.setCellValue(vPNAME);
                            cell.setCellStyle(csDetailLeft);

                            cell = row.createCell(3);
                            cell.setCellValue(vHN);
                            cell.setCellStyle(csDetail2Center);

                            cell = row.createCell(4);
                            cell.setCellValue(vDateOpdTh);
                            cell.setCellStyle(csDetail2Center);

                            cell = row.createCell(5);
                            cell.setCellValue(vSendDateTh);
                            cell.setCellStyle(csDetail2Center);

                            cell = row.createCell(6);
                            cell.setCellValue(vINDV_LATE);
                            cell.setCellStyle(csNum4);

                            cell = row.createCell(7);
                            cell.setCellValue(vOptypename);
                            cell.setCellStyle(csNum4);

                            cell = row.createCell(8);
                            cell.setCellValue(vMAININSCL);
                            cell.setCellStyle(csDetailLeft);

                            cell = row.createCell(9);
                            cell.setCellValue(vTOTALREIMBURSE);
                            cell.setCellStyle(csNum2);

                            cell = row.createCell(10);
                            cell.setCellValue(vTxid);
                            cell.setCellStyle(csDetailtxid);

                            curRow++;
                            i++;
                        }

                    } catch (SQLException e) {
                        e.printStackTrace();
                        Console.LOG(e.getMessage(), 0);
                        programeStatus.setMessage(Constants.MSG_PROCESS_FAILS + e.toString());
                        programeStatus.setTitle(Constants.MSG_CONTACT_ADMIN);
                        programeStatus.setProcessStatus(false);
                    } finally {
                        this.indiDao.closeConnection();
                    }

                    row = sheet.createRow(curRow);
                    row.setHeight((short) 450);
                    cell = row.createCell(0);
                    cell.setCellValue("รวม");
                    sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 8));
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(1);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(2);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(3);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(4);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(5);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(6);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(7);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(8);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(9);
                    cell.setCellFormula("SUM(J6:J" + (curRow) + ")");
                    cell.setCellStyle(csNum2B);

                    // หมายเหตุ
//                    row = sheet.createRow(curRow + 2);
//                    row.setHeight((short) 450);
//                    cell = row.createCell(0);
//                    cell.setCellValue("หมายเหตุ :   เนื่องจากปีงบประมาณ 2557 สำนักงานหลักประกันสุขภาพแห่งชาติ เขต 13 กรุงเทพมหานคร  ได้นำทุก Visit  ของการจ่ายชดเชย "
//                            + "มารวมจ่ายในค่าข้อมูลด้วย จึงจ่ายชดเชยเพียงวันละ Visit เท่านั้น");
//                    sheet.addMergedRegion(new CellRangeAddress(curRow + 2, curRow + 3, 0, 9));
//                    cell.setCellStyle(csDetail2);
                    // ############## footer report ################
                    int footerIndex = (curRow + 2);
                    row = sheet.createRow(footerIndex);
                    //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                    sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                    cell = row.createCell(0);
                    cell.setCellValue(UiReportIndividual.txtFooter1.getText());
                    cell.setCellStyle(csDetailLeft);

                    footerIndex = (curRow + 3);
                    row = sheet.createRow(footerIndex);
                    //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                    sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                    cell = row.createCell(0);
                    cell.setCellValue(UiReportIndividual.txtFooter2.getText());
                    cell.setCellStyle(csDetailLeft);

                    footerIndex = (curRow + 4);
                    row = sheet.createRow(footerIndex);
                    //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                    sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                    cell = row.createCell(0);
                    cell.setCellValue(UiReportIndividual.txtFooter3.getText());
                    cell.setCellStyle(csDetailLeft);
                    // ############## footer report ################

                    wb.setSheetName(0, listHospital.get(j).getHosCode().toString());

                    wb.write(out);

                    out.close();
                    file.close();
                    Console.LOG("ออกรายงาน: " + listHospital.get(j).getHosCode().toString() + "เรียบร้อย", 1);
                }
                programeStatus.setMessage(Constants.MSG_REPORT_SUCCESS);
                programeStatus.setTitle(Constants.MSG_REPORT_COMPLETE);
                programeStatus.setProcessStatus(true);
            } else {
                programeStatus.setMessage(Constants.MSG_REPORT_NO_DATA);
                programeStatus.setTitle(Constants.MSG_NO_DATA);
                programeStatus.setProcessStatus(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
            Console.LOG(e.getMessage(), 0);
            programeStatus.setMessage(Constants.MSG_PROCESS_FAILS + e.toString());
            programeStatus.setTitle(Constants.MSG_CONTACT_ADMIN);
            programeStatus.setProcessStatus(false);
        }
        return programeStatus;
    }

    // Console.LOG("กำลังออกรายงาน 1 ไฟล์ ต่อ 1 hcode อาจจะใช้เวลานาน กรุณารอ... ", 1);
    public ProgrameStatus op_individual_detail_SplitFile_caseLimitRowExcell(OppReport report) {
        FileOutputStream out = null;
        FileInputStream file = null;
        ProgrameStatus programeStatus = new ProgrameStatus();
        List<HospitalService> listHospital = new ArrayList<HospitalService>();
        try {

            listHospital = indiDao.getHospitalService(report);

            System.out.println("Hospital_size==" + listHospital.size());

            if (!listHospital.isEmpty()) {

                for (int j = 0; j < listHospital.size(); j++) {

                    report.setServiceCode(listHospital.get(j).getHosCode().toString());

                    List<Obj_individual> listIndivi = indiDao.getReportIndivi_ListObject(report);

                    Map mapListIndi = spliteRecordData(listIndivi);

                    List<Obj_individual> listIndi1 = (List<Obj_individual>) mapListIndi.get(1);
                    List<Obj_individual> listIndi2 = (List<Obj_individual>) mapListIndi.get(2);

                    double totalReimburse = 0;
                    int i = 1;
                    //###################### case <= 65500 ######################

                    if (listIndi1 != null) {
                        file = new FileInputStream(new File(".\\xls\\indivi_detail.xls"));

                        out = new FileOutputStream(report.getPathFile() + "\\individual_detail_" + report.getYearMonth() + "-" + report.getNo() + "_" + listHospital.get(j).getHosCode() + "_1" + ".xls");

                        HSSFWorkbook wbIndivi = new HSSFWorkbook(file);
                        this.loadStyle(wbIndivi);

                        String EXCELL_HEADER = UiReportIndividual.txtTitle1.getText() != null ? UiReportIndividual.txtTitle1.getText() : "รายละเอียดการจ่ายชดเชยค่าข้อมูลผู้ป่วยนอกรายบุคคล ปีงบประมาณ 2557";
                        String EXCELL_MONTH = UiReportIndividual.txtTitle2.getText() != null ? UiReportIndividual.txtTitle2.getText() : report.getTitle2();
                        String EXCELL_SERVICE = "หน่วยบริการ: " + listHospital.get(j).getHosName() + " (" + listHospital.get(j).getHosCode() + ")";

                        HSSFSheet sheet = wb.getSheetAt(0);
                        sheet.createFreezePane(3, 5);
                        sheet.setColumnWidth(10, WIDTH_TXID);

                        HSSFCell cell = null;
                        HSSFRow row = null;

                        // row 0
                        row = sheet.createRow(0);
                        row.setHeight((short) 390);
                        cell = row.createCell(0);
                        cell.setCellValue(EXCELL_HEADER);
                        sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 9));
                        cell.setCellStyle(csHead);

                        // row 1
                        row = sheet.createRow(1);
                        row.setHeight((short) 390);
                        cell = row.createCell(0);
                        cell.setCellValue(EXCELL_MONTH);
                        sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 9));
                        cell.setCellStyle(csHead);

                        // row 2
                        row = sheet.createRow(2);
                        row.setHeight((short) 390);
                        cell = row.createCell(0);
                        cell.setCellValue(EXCELL_SERVICE);
                        sheet.addMergedRegion(new CellRangeAddress(2, 2, 0, 9));
                        cell.setCellStyle(csHead);

                        //row 4 ตัวเนื้อหา
                        int curRow = 5;

                        for (Obj_individual objIndi : listIndi1) {
                            row = sheet.createRow(curRow);
                            row.setHeight((short) 360);
                            cell = row.createCell(0);
                            cell.setCellValue(i);
                            cell.setCellStyle(csNum4);

                            cell = row.createCell(1);
                            cell.setCellValue(function.subStringPid(objIndi.getPid()));
                            cell.setCellStyle(csDetailPid);

                            cell = row.createCell(2);
                            cell.setCellValue(objIndi.getPname());
                            cell.setCellStyle(csDetailLeft);

                            cell = row.createCell(3);
                            cell.setCellValue(objIndi.getHn());
                            cell.setCellStyle(csDetail2Center);

                            cell = row.createCell(4);
                            cell.setCellValue(objIndi.getDateopd_thai_buddha());
                            cell.setCellStyle(csDetail2Center);

                            cell = row.createCell(5);
                            cell.setCellValue(objIndi.getSenddate_thai_buddha());
                            cell.setCellStyle(csDetail2Center);

                            cell = row.createCell(6);
                            cell.setCellValue(objIndi.getIndv_late());
                            cell.setCellStyle(csNum4);

                            cell = row.createCell(7);
                            cell.setCellValue(objIndi.getOptypename());
                            cell.setCellStyle(csNum4);

                            cell = row.createCell(8);
                            cell.setCellValue(objIndi.getMaininscl());
                            cell.setCellStyle(csDetailLeft);

                            cell = row.createCell(9);
                            cell.setCellValue(objIndi.getTotalreimburse());
                            cell.setCellStyle(csNum2);

                            cell = row.createCell(10);
                            cell.setCellValue(objIndi.getTxid());
                            cell.setCellStyle(csDetailtxid);

                            totalReimburse = totalReimburse + objIndi.getTotalreimburse();

                            curRow++;
                            i++;
                        }

                        if (listIndi2.isEmpty()) {
                            row = sheet.createRow(curRow);
                            row.setHeight((short) 450);
                            cell = row.createCell(0);
                            cell.setCellValue("รวม");
                            sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 8));
                            cell.setCellStyle(csNum4B);

                            cell = row.createCell(1);
                            cell.setCellStyle(csNum4B);

                            cell = row.createCell(2);
                            cell.setCellStyle(csNum4B);

                            cell = row.createCell(3);
                            cell.setCellStyle(csNum4B);

                            cell = row.createCell(4);
                            cell.setCellStyle(csNum4B);

                            cell = row.createCell(5);
                            cell.setCellStyle(csNum4B);

                            cell = row.createCell(6);
                            cell.setCellStyle(csNum4B);

                            cell = row.createCell(7);
                            cell.setCellStyle(csNum4B);

                            cell = row.createCell(8);
                            cell.setCellStyle(csNum4B);

                            cell = row.createCell(9);
                            cell.setCellFormula("SUM(J6:J" + (curRow) + ")");
                            cell.setCellStyle(csNum2B);
                        }

                        // หมายเหตุ
//                        row = sheet.createRow(curRow + 2);
//                        row.setHeight((short) 450);
//                        cell = row.createCell(0);
//                        cell.setCellValue("หมายเหตุ :   เนื่องจากปีงบประมาณ 2557 สำนักงานหลักประกันสุขภาพแห่งชาติ เขต 13 กรุงเทพมหานคร  ได้นำทุก Visit  ของการจ่ายชดเชย "
//                                + "มารวมจ่ายในค่าข้อมูลด้วย จึงจ่ายชดเชยเพียงวันละ Visit เท่านั้น");
//                        sheet.addMergedRegion(new CellRangeAddress(curRow + 2, curRow + 3, 0, 9));
//                        cell.setCellStyle(csDetail2);
                        // ############## footer report ################
                        int footerIndex = (curRow + 2);
                        row = sheet.createRow(footerIndex);
                        //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                        sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                        cell = row.createCell(0);
                        cell.setCellValue(UiReportIndividual.txtFooter1.getText());
                        cell.setCellStyle(csDetailLeft);

                        footerIndex = (curRow + 3);
                        row = sheet.createRow(footerIndex);
                        //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                        sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                        cell = row.createCell(0);
                        cell.setCellValue(UiReportIndividual.txtFooter2.getText());
                        cell.setCellStyle(csDetailLeft);

                        footerIndex = (curRow + 4);
                        row = sheet.createRow(footerIndex);
                        //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                        sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                        cell = row.createCell(0);
                        cell.setCellValue(UiReportIndividual.txtFooter3.getText());
                        cell.setCellStyle(csDetailLeft);
                        // ############## footer report ################

                        wb.setSheetName(0, listHospital.get(j).getHosCode().toString());

                        wb.write(out);

                        out.close();
                        file.close();
                    }

                    //#######################################################
                    //###################### case > 65500 ######################
                    if (!listIndi2.isEmpty()) {

                        file = new FileInputStream(new File(".\\xls\\indivi_detail.xls"));

                        out = new FileOutputStream(report.getPathFile() + "\\individual_detail_" + report.getYearMonth() + "-" + report.getNo() + "_" + listHospital.get(j).getHosCode() + "_2" + ".xls");

                        HSSFWorkbook wbIndivi = new HSSFWorkbook(file);
                        this.loadStyle(wbIndivi);

                        String EXCELL_HEADER = "รายละเอียดการจ่ายชดเชยค่าข้อมูลผู้ป่วยนอกรายบุคคล ปีงบประมาณ 2557";
                        String EXCELL_MONTH = report.getTitle2();
                        String EXCELL_SERVICE = "หน่วยบริการ: " + listHospital.get(j).getHosName() + " (" + listHospital.get(j).getHosCode() + ")";

                        HSSFSheet sheet = wb.getSheetAt(0);
                        sheet.createFreezePane(3, 5);
                        sheet.setColumnWidth(10, WIDTH_TXID);

                        HSSFCell cell = null;
                        HSSFRow row = null;

                        // row 0
                        row = sheet.createRow(0);
                        row.setHeight((short) 390);
                        cell = row.createCell(0);
                        cell.setCellValue(EXCELL_HEADER);
                        sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 9));
                        cell.setCellStyle(csHead);

                        // row 1
                        row = sheet.createRow(1);
                        row.setHeight((short) 390);
                        cell = row.createCell(0);
                        cell.setCellValue(EXCELL_MONTH);
                        sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 9));
                        cell.setCellStyle(csHead);

                        // row 2
                        row = sheet.createRow(2);
                        row.setHeight((short) 390);
                        cell = row.createCell(0);
                        cell.setCellValue(EXCELL_SERVICE);
                        sheet.addMergedRegion(new CellRangeAddress(2, 2, 0, 9));
                        cell.setCellStyle(csHead);

                        //row 4 ตัวเนื้อหา
                        int curRow = 5;
                        //int i = 1;

                        for (Obj_individual objIndi : listIndi2) {
                            row = sheet.createRow(curRow);
                            row.setHeight((short) 360);
                            cell = row.createCell(0);
                            cell.setCellValue(i);
                            cell.setCellStyle(csNum4);

                            cell = row.createCell(1);
                            cell.setCellValue(function.subStringPid(objIndi.getPid()));
                            cell.setCellStyle(csDetailPid);

                            cell = row.createCell(2);
                            cell.setCellValue(objIndi.getPname());
                            cell.setCellStyle(csDetailLeft);

                            cell = row.createCell(3);
                            cell.setCellValue(objIndi.getHn());
                            cell.setCellStyle(csDetail2Center);

                            cell = row.createCell(4);
                            cell.setCellValue(objIndi.getDateopd_thai_buddha());
                            cell.setCellStyle(csDetail2Center);

                            cell = row.createCell(5);
                            cell.setCellValue(objIndi.getSenddate_thai_buddha());
                            cell.setCellStyle(csDetail2Center);

                            cell = row.createCell(6);
                            cell.setCellValue(objIndi.getIndv_late());
                            cell.setCellStyle(csNum4);

                            cell = row.createCell(7);
                            cell.setCellValue(objIndi.getOptypename());
                            cell.setCellStyle(csNum4);

                            cell = row.createCell(8);
                            cell.setCellValue(objIndi.getMaininscl());
                            cell.setCellStyle(csDetailLeft);

                            cell = row.createCell(9);
                            cell.setCellValue(objIndi.getTotalreimburse());
                            cell.setCellStyle(csNum2);

                            cell = row.createCell(10);
                            cell.setCellValue(objIndi.getTxid());
                            cell.setCellStyle(csDetailtxid);

                            totalReimburse = totalReimburse + objIndi.getTotalreimburse();

                            curRow++;
                            i++;
                        }

                        row = sheet.createRow(curRow);
                        row.setHeight((short) 450);
                        cell = row.createCell(0);
                        cell.setCellValue("รวม");
                        sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 8));
                        cell.setCellStyle(csNum4B);

                        cell = row.createCell(1);
                        cell.setCellStyle(csNum4B);

                        cell = row.createCell(2);
                        cell.setCellStyle(csNum4B);

                        cell = row.createCell(3);
                        cell.setCellStyle(csNum4B);

                        cell = row.createCell(4);
                        cell.setCellStyle(csNum4B);

                        cell = row.createCell(5);
                        cell.setCellStyle(csNum4B);

                        cell = row.createCell(6);
                        cell.setCellStyle(csNum4B);

                        cell = row.createCell(7);
                        cell.setCellStyle(csNum4B);

                        cell = row.createCell(8);
                        cell.setCellStyle(csNum4B);

                        cell = row.createCell(9);
                        cell.setCellValue(totalReimburse);
                        cell.setCellStyle(csNum2B);

                        // หมายเหตุ
//                        row = sheet.createRow(curRow + 2);
//                        row.setHeight((short) 450);
//                        cell = row.createCell(0);
//                        cell.setCellValue("หมายเหตุ :   เนื่องจากปีงบประมาณ 2557 สำนักงานหลักประกันสุขภาพแห่งชาติ เขต 13 กรุงเทพมหานคร  ได้นำทุก Visit  ของการจ่ายชดเชย "
//                                + "มารวมจ่ายในค่าข้อมูลด้วย จึงจ่ายชดเชยเพียงวันละ Visit เท่านั้น");
//                        sheet.addMergedRegion(new CellRangeAddress(curRow + 2, curRow + 3, 0, 9));
//                        cell.setCellStyle(csDetail2);
                        // ############## footer report ################
                        int footerIndex = (curRow + 2);
                        row = sheet.createRow(footerIndex);
                        //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                        sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                        cell = row.createCell(0);
                        cell.setCellValue(UiReportIndividual.txtFooter1.getText());
                        cell.setCellStyle(csDetailLeft);

                        footerIndex = (curRow + 3);
                        row = sheet.createRow(footerIndex);
                        //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                        sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                        cell = row.createCell(0);
                        cell.setCellValue(UiReportIndividual.txtFooter2.getText());
                        cell.setCellStyle(csDetailLeft);

                        footerIndex = (curRow + 4);
                        row = sheet.createRow(footerIndex);
                        //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                        sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                        cell = row.createCell(0);
                        cell.setCellValue(UiReportIndividual.txtFooter3.getText());
                        cell.setCellStyle(csDetailLeft);
                        // ############## footer report ################

                        wb.setSheetName(0, listHospital.get(j).getHosCode().toString());

                        wb.write(out);

                        out.close();
                        file.close();
                    }
                    //#######################################################

                    Console.LOG("ออกรายงาน: " + listHospital.get(j).getHosCode().toString() + "เรียบร้อย", 1);
                }
                programeStatus.setMessage(Constants.MSG_REPORT_SUCCESS);
                programeStatus.setTitle(Constants.MSG_REPORT_COMPLETE);
                programeStatus.setProcessStatus(true);
            } else {
                programeStatus.setMessage(Constants.MSG_REPORT_NO_DATA);
                programeStatus.setTitle(Constants.MSG_NO_DATA);
                programeStatus.setProcessStatus(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
            Console.LOG(e.getMessage(), 0);
            programeStatus.setMessage(Constants.MSG_PROCESS_FAILS + e.toString());
            programeStatus.setTitle(Constants.MSG_CONTACT_ADMIN);
            programeStatus.setProcessStatus(false);
        }
        return programeStatus;
    }

    // Console.LOG("กำลังออกรายงาน 1 ไฟล์ ทุก hcode อาจจะใช้เวลานาน กรุณารอ... ", 1);
    public ProgrameStatus op_individual_detail_allcode_spliteFile_65500(OppReport report) {
        FileOutputStream out = null;
        FileInputStream file = null;
        Obj_row_summary obj_row = null;
        ProgrameStatus programeStatus = new ProgrameStatus();
        try {
            int row_content = 1;
            int file_no = 0;
            int row_data = 1;
            HSSFWorkbook wbIndivi = null;
            HSSFSheet sheet = null;
            int curRow = 0;

            List<Obj_individual> list_indivi = indiDao.getReportIndivi_ListObject(report);
            obj_row = new Obj_row_summary();

            // loop
            for (int i = 0; i < list_indivi.size(); i++) {
                Obj_individual objIndi = list_indivi.get(i);

                // #################### variable ###################
                HSSFCell cell = null;
                HSSFRow row = null;
                // #################### end  variable ##############

                // new file excell
                if (row_content >= 1 && row_content <= ROW_LIMIT) {  // limit excell row 65,536 rows by 256 columns

                    // #################### header report ############
                    if (row_content == 1) {
                        System.out.println("row_content == 1 : ");
                        file = new FileInputStream(new File(".\\xls\\indivi_detail_hcode.xls"));

                        out = new FileOutputStream(report.getPathFile() + "\\individual_detail_" + report.getYearMonth() + "-" + report.getNo() + "_file_" + (file_no + 1) + "" + ".xls");

                        String EXCELL_HEADER = UiReportIndividual.txtTitle1.getText() != null ? UiReportIndividual.txtTitle1.getText() : "รายละเอียดการจ่ายชดเชยค่าข้อมูลผู้ป่วยนอกรายบุคคล ปีงบประมาณ 2557";
                        String EXCELL_MONTH = UiReportIndividual.txtTitle2.getText() != null ? UiReportIndividual.txtTitle2.getText() : report.getTitle2();

                        // ################### valiable #################
                        wbIndivi = new HSSFWorkbook(file);
                        this.loadStyle(wbIndivi);

                        sheet = wb.getSheetAt(0);
                        sheet.createFreezePane(3, 5);
                        sheet.setColumnWidth(10, WIDTH_TXID);

                        // ################### valiable #################
                        // row 0
                        row = sheet.createRow(0);
                        row.setHeight((short) 390);
                        cell = row.createCell(0);
                        cell.setCellValue(EXCELL_HEADER);
                        sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 10));
                        cell.setCellStyle(csHead);

                        // row 1
                        row = sheet.createRow(1);
                        row.setHeight((short) 390);
                        cell = row.createCell(0);
                        cell.setCellValue(EXCELL_MONTH);
                        sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 10));
                        cell.setCellStyle(csHead);

                        //row 4 ตัวเนื้อหา
                        curRow = 5;
                    }
                    // ####################end header report #########               

                    // #################### content report ############                    
                    row = sheet.createRow(curRow);
                    row.setHeight((short) 360);
                    cell = row.createCell(0);
                    cell.setCellValue(row_data);
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(1);
                    cell.setCellValue(objIndi.getHcode() + " : " + objIndi.getHcodename());
                    cell.setCellStyle(csDetailPid);

                    cell = row.createCell(2);
                    cell.setCellValue(function.subStringPid(objIndi.getPid()));
                    cell.setCellStyle(csDetailPid);

                    cell = row.createCell(3);
                    cell.setCellValue(objIndi.getPname());
                    cell.setCellStyle(csDetailLeft);

                    cell = row.createCell(4);
                    cell.setCellValue(objIndi.getHn());
                    cell.setCellStyle(csDetail2Center);

                    cell = row.createCell(5);
                    cell.setCellValue(objIndi.getDateopd_thai_buddha());
                    cell.setCellStyle(csDetail2Center);

                    cell = row.createCell(6);
                    cell.setCellValue(objIndi.getSenddate_thai_buddha());
                    cell.setCellStyle(csDetail2Center);

                    cell = row.createCell(7);
                    cell.setCellValue(objIndi.getIndv_late());
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(8);
                    cell.setCellValue(objIndi.getOptypename());
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(9);
                    cell.setCellValue(objIndi.getMaininscl());
                    cell.setCellStyle(csDetailLeft);

                    cell = row.createCell(10);
                    cell.setCellValue(objIndi.getTotalreimburse());
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(11);
                    cell.setCellValue(objIndi.getTxid());
                    cell.setCellStyle(csDetailtxid);

                    // ###################### sum total ##########
                    obj_row.setCell_K(obj_row.getCell_K() + objIndi.getTotalreimburse());
                    // ######################end sum total #######

                    // #################### end content report ########
                    if (row_content == ROW_LIMIT) {

                        if (row_data == list_indivi.size()) {
                            System.out.println("row_data == list_indivi.size() :");
                            // #################### footer report ############
                            if (list_indivi.size() / ROW_LIMIT == file_no) {

                                System.out.println("list_indivi.size() / ROW_LIMIT : ");
                                curRow++;

                                System.out.println("curRow : ");

                                row = sheet.createRow(curRow);
                                row.setHeight((short) 450);
                                cell = row.createCell(0);
                                cell.setCellValue("รวม");
                                sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 8));
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(1);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(2);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(3);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(4);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(5);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(6);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(7);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(8);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(9);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(10);
                                cell.setCellValue(obj_row.getCell_K());
                                cell.setCellStyle(csNum2B);
                            }
                            // #################### end footer report #########

                            // write file 
                            wb.write(out);

                            out.close();
                            file.close();

                            // เริ่ม รัน ค่าไหม่
                            row_content = 1;
                            // เริ่ม row ของเอกสารไหม่ ที่ 5
                            curRow = 5;
                            // บวก จำนวนไฟล์ เพิ่ม 1
                            file_no = file_no + 1;

                            System.out.println(" new file ");
                            Console.LOG(" ออกรายงานไฟล์ ที่ :" + file_no + " สำเร็จเรียบร้อยแล้ว ", 1);
                        } else {
                            // write file 
                            wb.write(out);

                            out.close();
                            file.close();

                            // เริ่ม รัน ค่าไหม่
                            row_content = 1;
                            // เริ่ม row ของเอกสารไหม่ ที่ 5
                            curRow = 5;
                            // บวก จำนวนไฟล์ เพิ่ม 1
                            file_no = file_no + 1;

                            System.out.println(" new file ");
                            Console.LOG(" ออกรายงานไฟล์ ที่ :" + file_no + " สำเร็จเรียบร้อยแล้ว ", 1);
                            row_data++;
                        }
                    } else {

                        if (row_data == list_indivi.size()) {
                            System.out.println("row_data == list_indivi.size() :");

                            // #################### footer report ############
                            if (list_indivi.size() / ROW_LIMIT == file_no) {

                                System.out.println("list_indivi.size() / ROW_LIMIT : ");
                                curRow++;

                                System.out.println("curRow : ");

                                row = sheet.createRow(curRow);
                                row.setHeight((short) 450);
                                cell = row.createCell(0);
                                cell.setCellValue("รวม");
                                sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 8));
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(1);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(2);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(3);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(4);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(5);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(6);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(7);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(8);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(9);
                                cell.setCellStyle(csNum4B);

                                cell = row.createCell(10);
                                cell.setCellValue(obj_row.getCell_K());
                                cell.setCellStyle(csNum2B);
                            }
                            // #################### end footer report #########

                            // write file 
                            wb.write(out);

                            out.close();
                            file.close();

                            // เริ่ม รัน ค่าไหม่
                            row_content = 1;
                            // เริ่ม row ของเอกสารไหม่ ที่ 5
                            curRow = 5;
                            // บวก จำนวนไฟล์ เพิ่ม 1
                            file_no = file_no + 1;

                            System.out.println(" new file ");
                            Console.LOG("อออกรายงานไฟล์ ที่ :" + file_no + " สำเร็จเรียบร้อยแล้ว ", 1);
                        }

                        curRow++;
                        row_content++;
                        row_data++;
                    }

//                    System.out.println("curRow  : " + curRow);
//                    System.out.println("row_content : " + row_content);
//                    System.out.println("row_data : " + row_data);
                } // end if
            } // end for

            programeStatus.setMessage(Constants.MSG_REPORT_SUCCESS);
            programeStatus.setTitle(Constants.MSG_REPORT_COMPLETE);
            programeStatus.setProcessStatus(true);
        } catch (Exception e) {
            e.printStackTrace();
            Console.LOG(e.getMessage(), 0);
            programeStatus.setMessage(Constants.MSG_PROCESS_FAILS + e.getMessage());
            programeStatus.setTitle(Constants.MSG_CONTACT_ADMIN);
            programeStatus.setProcessStatus(false);
        }
        return programeStatus;
    }

    // ###################### for web site claim######################
    public ProgrameStatus op_individual_detail_byHcode_1fileMutiSheet(OppReport report) {
        FileOutputStream out = null;
        FileInputStream file = null;
        Obj_row_summary obj_row = null;
        ProgrameStatus programeStatus = new ProgrameStatus();
        List<HospitalService> listHospital = new ArrayList<HospitalService>();
        String stmp = StringOpUtil.removeNull(report.getYearMonth()) + "-" + report.getNo();
        String pathDirectory = report.getPathFile() + "\\indv\\" + stmp;
        try {
            listHospital = indiDao.getHospitalService(report);

            // ############## loop list hospital service #############
            for (int i = 0; i < listHospital.size(); i++) {
                HospitalService objService = listHospital.get(i);

                // ###################### FileInputStream ####################
                HSSFWorkbook wbIndivi = null;

                file = new FileInputStream(new File(".\\xls\\indivi_detail_hcode.xls"));

                BaseFunction.createMutiDirectory(new File(pathDirectory));
                out = new FileOutputStream(pathDirectory + "\\indv_" + objService.getHosCode() + "_" + stmp + ".xls");
                // ###################### FileInputStream ####################

                wbIndivi = new HSSFWorkbook(file);
                this.loadStyle(wbIndivi);

                report.setServiceCode(objService.getHosCode());
                List<Obj_individual> list_indivi = indiDao.getReportIndivi_ListObject(report);

                System.out.println(" หน่วยบริการ : " + objService.getHosCode() + " จำนวน : " + list_indivi.size());

                // ################### Global Variable ##############
                int row_content = 1;
                int file_no = 0;
                int row_data = 1;
                HSSFSheet sheet = null;
                int curRow = 0;
                obj_row = new Obj_row_summary();
                // ###################End Global Variable ###########

                for (int j = 0; j < list_indivi.size(); j++) {
                    Obj_individual objIndi = list_indivi.get(j);

                    HSSFCell cell = null;
                    HSSFRow row = null;

                    //####################### File Excell Sheet 1 ##################                                                            
                    if (row_content >= 1 && row_content <= ROW_LIMIT) {  // limit excell row 65,536 rows by 256 columns

                        // #################### header report ############
                        if (row_content == 1) {

                            String EXCELL_HEADER = UiReportIndividual.txtTitle1.getText() != null ? UiReportIndividual.txtTitle1.getText() : "รายละเอียดการจ่ายชดเชยค่าข้อมูลผู้ป่วยนอกรายบุคคล ปีงบประมาณ 2557";
                            String EXCELL_MONTH = UiReportIndividual.txtTitle2.getText() != null ? UiReportIndividual.txtTitle2.getText() : report.getTitle2();
                            String EXCELL_SERVICE = "หน่วยบริการ: " + objService.getHosName() + " (" + objService.getHosCode() + ")";

                            // ################### valiable #################
                            sheet = wb.cloneSheet(0);
                            sheet.createFreezePane(3, 5);
                            sheet.setColumnWidth(10, WIDTH_TXID);

                            // ################### valiable #################
                            // row 0
                            row = sheet.createRow(0);
                            row.setHeight((short) 390);
                            cell = row.createCell(0);
                            cell.setCellValue(EXCELL_HEADER);
                            sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 10));
                            cell.setCellStyle(csHead);

                            // row 1
                            row = sheet.createRow(1);
                            row.setHeight((short) 390);
                            cell = row.createCell(0);
                            cell.setCellValue(EXCELL_MONTH);
                            sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 10));
                            cell.setCellStyle(csHead);

                            // row 2
                            row = sheet.createRow(2);
                            row.setHeight((short) 390);
                            cell = row.createCell(0);
                            cell.setCellValue(EXCELL_SERVICE);
                            sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 10));
                            cell.setCellStyle(csHead);

                            //row 4 ตัวเนื้อหา
                            curRow = 5;

                            System.out.println(" Write Sheet " + file_no);
                        }
                        // ####################end header report #########  

                        // #################### content header report ############                    
                        row = sheet.createRow(curRow);
                        row.setHeight((short) 360);
                        cell = row.createCell(0);
                        cell.setCellValue(row_data);
                        cell.setCellStyle(csNum4);

                        cell = row.createCell(1);
                        cell.setCellValue(objIndi.getHcode() + " : " + objIndi.getHcodename());
                        cell.setCellStyle(csDetailPid);

                        cell = row.createCell(2);
                        cell.setCellValue(function.subStringPid(objIndi.getPid()));
                        cell.setCellStyle(csDetailPid);

                        cell = row.createCell(3);
                        cell.setCellValue(objIndi.getPname());
                        cell.setCellStyle(csDetailLeft);

                        cell = row.createCell(4);
                        cell.setCellValue(objIndi.getHn());
                        cell.setCellStyle(csDetail2Center);

                        cell = row.createCell(5);
                        cell.setCellValue(objIndi.getDateopd_thai_buddha());
                        cell.setCellStyle(csDetail2Center);

                        cell = row.createCell(6);
                        cell.setCellValue(objIndi.getSenddate_thai_buddha());
                        cell.setCellStyle(csDetail2Center);

                        cell = row.createCell(7);
                        cell.setCellValue(objIndi.getIndv_late());
                        cell.setCellStyle(csNum4);

                        cell = row.createCell(8);
                        cell.setCellValue(objIndi.getOptypename());
                        cell.setCellStyle(csNum4);

                        cell = row.createCell(9);
                        cell.setCellValue(objIndi.getMaininscl());
                        cell.setCellStyle(csDetailLeft);

                        cell = row.createCell(10);
                        cell.setCellValue(objIndi.getTotalreimburse());
                        cell.setCellStyle(csNum2);

                        cell = row.createCell(11);
                        cell.setCellValue(objIndi.getTxid());
                        cell.setCellStyle(csDetailtxid);

                        // ###################### sum total ##########
                        obj_row.setCell_K(obj_row.getCell_K() + objIndi.getTotalreimburse());
                        // ######################end sum total #######

                        if (row_content == ROW_LIMIT) {
                            System.out.println("row_content == 65500 : " + row_content);

                            if (row_data == list_indivi.size()) {
                                System.out.println("row_data == list_indivi.size() :" + row_data);
                                // #################### footer report ############
                                if (list_indivi.size() / ROW_LIMIT == file_no) {

                                    System.out.println("list_indivi.size() / ROW_LIMIT : ");
                                    curRow++;

                                    row = sheet.createRow(curRow);
                                    row.setHeight((short) 450);
                                    cell = row.createCell(0);
                                    cell.setCellValue("รวม");
                                    sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 8));
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(1);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(2);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(3);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(4);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(5);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(6);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(7);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(8);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(9);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(10);
                                    cell.setCellValue(obj_row.getCell_K());
                                    cell.setCellStyle(csNum2B);

                                    // ############## footer report ################
                                    int footerIndex = (curRow + 2);
                                    row = sheet.createRow(footerIndex);
                                    //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                                    sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                                    cell = row.createCell(0);
                                    cell.setCellValue(UiReportIndividual.txtFooter1.getText());
                                    cell.setCellStyle(csDetailLeft);

                                    footerIndex = (curRow + 3);
                                    row = sheet.createRow(footerIndex);
                                    //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                                    sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                                    cell = row.createCell(0);
                                    cell.setCellValue(UiReportIndividual.txtFooter2.getText());
                                    cell.setCellStyle(csDetailLeft);

                                    footerIndex = (curRow + 4);
                                    row = sheet.createRow(footerIndex);
                                    //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                                    sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                                    cell = row.createCell(0);
                                    cell.setCellValue(UiReportIndividual.txtFooter3.getText());
                                    cell.setCellStyle(csDetailLeft);
                                    // ############## footer report ################
                                }
                            // #################### end footer report #########                            

                                // เริ่ม รัน ค่าไหม่
                                row_content = 1;
                                // เริ่ม row ของเอกสารไหม่ ที่ 5
                                curRow = 5;
                                // บวก จำนวนไฟล์ เพิ่ม 1
                                file_no = file_no + 1;
                                wb.setSheetName(file_no, String.valueOf(file_no));
                            } else {

                                // เริ่ม รัน ค่าไหม่
                                row_content = 1;
                                // เริ่ม row ของเอกสารไหม่ ที่ 5
                                curRow = 5;
                                // บวก จำนวนไฟล์ เพิ่ม 1
                                file_no = file_no + 1;

                                row_data++;
                                wb.setSheetName(file_no, String.valueOf(file_no));
                            }
                        } else {

                            if (row_data == list_indivi.size()) {
                                System.out.println("row_data == list_indivi.size() :");

                                // #################### footer report ############
                                if (list_indivi.size() / ROW_LIMIT == file_no) {

                                    System.out.println("list_indivi.size() / ROW_LIMIT : ");
                                    curRow++;

                                    System.out.println("curRow : ");

                                    row = sheet.createRow(curRow);
                                    row.setHeight((short) 450);
                                    cell = row.createCell(0);
                                    cell.setCellValue("รวม");
                                    sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 8));
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(1);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(2);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(3);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(4);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(5);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(6);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(7);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(8);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(9);
                                    cell.setCellStyle(csNum4B);

                                    cell = row.createCell(10);
                                    cell.setCellValue(obj_row.getCell_K());
                                    cell.setCellStyle(csNum2B);
                                    
                                    // ############## footer report ################
                                    int footerIndex = (curRow + 2);
                                    row = sheet.createRow(footerIndex);
                                    //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                                    sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                                    cell = row.createCell(0);
                                    cell.setCellValue(UiReportIndividual.txtFooter1.getText());
                                    cell.setCellStyle(csDetailLeft);

                                    footerIndex = (curRow + 3);
                                    row = sheet.createRow(footerIndex);
                                    //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                                    sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                                    cell = row.createCell(0);
                                    cell.setCellValue(UiReportIndividual.txtFooter2.getText());
                                    cell.setCellStyle(csDetailLeft);

                                    footerIndex = (curRow + 4);
                                    row = sheet.createRow(footerIndex);
                                    //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
                                    sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
                                    cell = row.createCell(0);
                                    cell.setCellValue(UiReportIndividual.txtFooter3.getText());
                                    cell.setCellStyle(csDetailLeft);
                                    // ############## footer report ################
                                }
                            // #################### end footer report #########                          

                                // เริ่ม รัน ค่าไหม่
                                row_content = 1;
                                // เริ่ม row ของเอกสารไหม่ ที่ 5
                                curRow = 5;
                                // บวก จำนวนไฟล์ เพิ่ม 1
                                file_no = file_no + 1;

                                wb.setSheetName(file_no, String.valueOf(file_no));
                            }

                            curRow++;
                            row_content++;
                            row_data++;
                        }

                    }

                    // #################### end content header report ########
                }
                // ################## write file ########################## 
                // write file 
                wb.removeSheetAt(0);
                wb.write(out);

                out.close();
                file.close();
                Console.LOG("ออกรายงานหน่วยบริการ : " + objService.getHosCode() + " เรียบร้อยแล้ว", 1);
                programeStatus.setMessage(Constants.MSG_REPORT_SUCCESS);
                programeStatus.setTitle(Constants.MSG_REPORT_COMPLETE);
                programeStatus.setProcessStatus(true);
                // ################## write file ##########################
            }
        } catch (Exception e) {
            e.printStackTrace();
            Console.LOG(e.getMessage(), 0);
        }
        return programeStatus;

    }

    // ######################end for web site claim###################
    // ไม่ได้ใช้งาน
    public ProgrameStatus op_individual_detail_MutiSheet(OppReport report) {
        FileOutputStream out = null;
        FileInputStream file = null;
        ProgrameStatus programeStatus = new ProgrameStatus();
        try {

            file = new FileInputStream(new File(".\\xls\\indivi_detail.xls"));

            HSSFWorkbook wbIndivi = new HSSFWorkbook(file);
            this.loadStyle(wbIndivi);

            List<HospitalService> listHospital = indiDao.getHospitalService(report);

            System.out.println("Hospital_size==" + listHospital.size());

            if (listHospital.size() != 0) {

                out = new FileOutputStream(report.getPathFile() + "\\individual_detail .xls");

                for (int j = 0; j < listHospital.size() / 2; j++) {

                    System.out.println("hospitalService.getHosCode===>>" + listHospital.get(j).getHosCode());

                    String EXCELL_HEADER = "รายละเอียดการจ่ายชดเชยค่าข้อมูลผู้ป่วยนอกรายบุคคล ปีงบประมาณ 2557(" + listHospital.get(j).getHosCode() + ")";
                    String EXCELL_MONTH = report.getTitle2();
                    String EXCELL_SERVICE = "หน่วยบริการ :" + listHospital.get(j).getHosName() + " รหัสสถานพยาบาล :" + listHospital.get(j).getHosCode();

                    wb.getSheetAt(0);
                    HSSFSheet sheet = wb.cloneSheet(0);

                    HSSFCell cell = null;
                    HSSFRow row = null;

                    // row 0
                    row = sheet.createRow(0);
                    cell = row.createCell(0);
                    cell.setCellValue(EXCELL_HEADER);
                    sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 8));
                    cell.setCellStyle(csHead);

                    // row 1
                    row = sheet.createRow(1);
                    cell = row.createCell(0);
                    cell.setCellValue(EXCELL_MONTH);
                    sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 8));
                    cell.setCellStyle(csHead);

                    // row 2
                    row = sheet.createRow(2);
                    cell = row.createCell(0);
                    cell.setCellValue(EXCELL_SERVICE);
                    sheet.addMergedRegion(new CellRangeAddress(2, 2, 0, 8));
                    cell.setCellStyle(csHead);

                    //row 4 ตัวเนื้อหา
                    int curRow = 5;
                    int i = 1;

                    ResultSet rs = null;

                    try {
                        report.setServiceCode(listHospital.get(j).getHosCode().toString());
                        rs = indiDao.getReportIndividual(report);

                        while (rs.next()) {
                            String vPID = rs.getString("PID");
                            String vPNAME = rs.getString("PNAME");
                            String vHN = rs.getString("HN");
                            String vDATEOPD = rs.getString("DATEOPD");
                            String vDateOpdTh = rs.getString("dateopd_thai_buddha");
                            String vSendDateTh = rs.getString("SENDDATE_thai_buddha");
                            String vRptDateTh = rs.getString("RPT_DATE_thai_buddha");
                            String vSENDDATE = rs.getString("SENDDATE");
                            String vINDV_LATE = rs.getString("INDV_LATE");
                            String vMAININSCL = rs.getString("MAININSCL");
                            double vTOTALREIMBURSE = rs.getDouble("TOTALREIMBURSE");

                            row = sheet.createRow(curRow);
                            cell = row.createCell(0);
                            cell.setCellValue(i);
                            cell.setCellStyle(csNum4);

                            cell = row.createCell(1);
                            cell.setCellValue(function.subStringPid(vPID));
                            cell.setCellStyle(csDetailPid);

                            cell = row.createCell(2);
                            cell.setCellValue(vPNAME);
                            cell.setCellStyle(csDetailLeft);

                            cell = row.createCell(3);
                            cell.setCellValue(vHN);
                            cell.setCellStyle(csDetail);

                            cell = row.createCell(4);
                            cell.setCellValue(vDateOpdTh);
                            cell.setCellStyle(csDetail);

                            cell = row.createCell(5);
                            cell.setCellValue(vSendDateTh);
                            cell.setCellStyle(csDetail);

                            cell = row.createCell(6);
                            cell.setCellValue(vINDV_LATE);
                            cell.setCellStyle(csDetail);

                            cell = row.createCell(7);
                            cell.setCellValue(vMAININSCL);
                            cell.setCellStyle(csDetailLeft);

                            cell = row.createCell(8);
                            cell.setCellValue(vTOTALREIMBURSE);
                            cell.setCellStyle(csNum2);

                            curRow++;
                            i++;

                        }

                    } catch (SQLException e) {
                        e.printStackTrace();
                        Console.LOG(e.getMessage(), 0);
                        programeStatus.setMessage(Constants.MSG_PROCESS_FAILS + e.toString());
                        programeStatus.setTitle(Constants.MSG_CONTACT_ADMIN);
                        programeStatus.setProcessStatus(false);
                    } finally {
                        this.indiDao.closeConnection();
                    }

                    row = sheet.createRow(curRow);
                    cell = row.createCell(0);
                    cell.setCellValue("รวม");
                    sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 7));
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(1);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(2);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(3);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(4);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(5);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(6);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(7);
                    cell.setCellStyle(csNum4B);

                    cell = row.createCell(8);
                    cell.setCellFormula("SUM(I6:I" + (curRow) + ")");
                    cell.setCellStyle(csNum2B);

                    // หมายเหตุ
                    row = sheet.createRow(curRow + 2);
                    row.setHeight((short) 450);
                    cell = row.createCell(0);

                    /* backup code
                     cell.setCellValue("หมายเหตุ :   เนื่องจากปีงบประมาณ 2557 สำนักงานหลักประกันสุขภาพแห่งชาติ เขต 13 กรุงเทพมหานคร  ได้นำทุก Visit  ของการจ่ายชดเชย "
                     + "มารวมจ่ายในค่าข้อมูลด้วย จึงจ่ายชดเชยเพียงวันละ Visit เท่านั้น");
                     sheet.addMergedRegion(new CellRangeAddress(curRow + 2, curRow + 2, 0, 9));
                     cell.setCellStyle(csNum2B);
                     */
                    /*
                     หมายเหตุ 
                     1.	ปีงบประมาณ 2557 สำนักงานหลักประกันสุขภาพแห่งชาติ  เขต 13 กรุงเทพมหานคร กำหนดหลักเกณฑ์การจ่ายชดเชยค่าข้อมูลการบริการผู้ป่วยนอกรายบุคคล (OP Individual) วันละ 1 visit
                     2.	การจ่ายค่าข้อมูล ในปีงบประมาณ 2557 ที่มีการจ่ายซ้ำ/เกิน เกิดจากหน่วยบริการส่งข้อมูล OP Individual มากกว่า 1 visit ใน 1 วัน และโปรแกรมมีการประมวลผลคลาดเคลื่อนจากเงื่อนไขที่กำหนด
                     */
                    row = sheet.createRow(curRow + 2);
                    row.setHeight((short) 450);
                    cell = row.createCell(0);
                    cell.setCellValue("หมายเหตุ ");
                    sheet.addMergedRegion(new CellRangeAddress(curRow + 2, curRow + 2, 0, 9));
                    cell.setCellStyle(csNum2B);
                    curRow++;

                    row = sheet.createRow(curRow);
                    row.setHeight((short) 450);
                    cell = row.createCell(0);
                    cell.setCellValue("1.ปีงบประมาณ 2557 สำนักงานหลักประกันสุขภาพแห่งชาติ  "
                            + " เขต 13 กรุงเทพมหานคร กำหนดหลักเกณฑ์การจ่ายชดเชยค่าข้อมูลการบริการผู้ป่วยนอกรายบุคคล"
                            + " (OP Individual) วันละ 1 visit ");
                    sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 9));
                    cell.setCellStyle(csNum2B);
                    curRow++;

                    row = sheet.createRow(curRow);
                    row.setHeight((short) 450);
                    cell = row.createCell(0);
                    cell.setCellValue("2.การจ่ายค่าข้อมูล ในปีงบประมาณ 2557 ที่มีการจ่ายซ้ำ/เกิน "
                            + " เกิดจากหน่วยบริการส่งข้อมูล OP Individual มากกว่า 1 visit ใน 1 "
                            + " วัน และโปรแกรมมีการประมวลผลคลาดเคลื่อนจากเงื่อนไขที่กำหนด ");
                    sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 9));
                    cell.setCellStyle(csNum2B);

                    wb.setSheetName(j + 1, listHospital.get(j).getHosCode().toString());
                    Console.LOG("รายงาน " + listHospital.get(j).getHosCode().toString() + " ถูกออกเรียบร้อยแล้ว", 1);
                }

                wb.removeSheetAt(0);

                wb.write(out);

                out.close();
                file.close();
                programeStatus.setMessage(Constants.MSG_REPORT_SUCCESS);
                programeStatus.setTitle(Constants.MSG_REPORT_COMPLETE);
                programeStatus.setProcessStatus(true);
            } else {
                programeStatus.setMessage(Constants.MSG_REPORT_NO_DATA);
                programeStatus.setTitle(Constants.MSG_NO_DATA);
                programeStatus.setProcessStatus(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
            Console.LOG(e.getMessage(), 0);
            programeStatus.setMessage(Constants.MSG_PROCESS_FAILS + e.toString());
            programeStatus.setTitle(Constants.MSG_CONTACT_ADMIN);
            programeStatus.setProcessStatus(false);
        }
        return programeStatus;
    }

    public ProgrameStatus op_individual_sum(OppReport report) {
        FileInputStream file = null;
        FileOutputStream out = null;
        ProgrameStatus programeStatus = new ProgrameStatus();
        try {
            file = new FileInputStream(new File(".\\xls\\indivi_summary.xls"));

            out = new FileOutputStream(report.getPathFile() + "\\indevidual_summary.xls");

            HSSFWorkbook wbIndivi = new HSSFWorkbook(file);
            this.loadStyle(wbIndivi);

            String EXCELL_HEADER = UiReportIndividual.txtTitle1.getText() != null ? UiReportIndividual.txtTitle1.getText() : "สรุปการจ่ายชดเชยค่าข้อมูลผู้ป่วยนอกรายบุคคล ปีงบประมาณ 2557";
            String EXCELL_MONTH = UiReportIndividual.txtTitle2.getText() != null ? UiReportIndividual.txtTitle2.getText() : report.getTitle2();

            HSSFSheet sheet = wb.getSheetAt(0);
            sheet.createFreezePane(3, 5);

            HSSFCell cell = null;
            HSSFRow row = null;

            // row 0
            row = sheet.createRow(0);
            row.setHeight((short) 390);
            cell = row.createCell(0);
            cell.setCellValue(EXCELL_HEADER);
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 5));
            cell.setCellStyle(csHead);

            // row 1
            row = sheet.createRow(1);
            row.setHeight((short) 390);
            cell = row.createCell(0);
            cell.setCellValue(EXCELL_MONTH);
            sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 5));
            cell.setCellStyle(csHead);

            //row 4 ตัวเนื้อหา
            int curRow = 5;

            ResultSet rs = null;

            try {
                rs = indiDao.getReportIndividual(report);

                while (rs.next()) {
                    int vCol0 = rs.getInt("NO");
                    String vCol1 = rs.getString("HCODE");
                    String vCol2 = rs.getString("HCODENAME");
                    double vCol3 = rs.getDouble("INTIME_MAN");
                    double vCol4 = rs.getDouble("INTIME_VISIT");
                    double vCol5 = rs.getDouble("INTIME_TOTALREIMBURSE");
                    double vCol6 = rs.getDouble("LATE_MAN");
                    double vCol7 = rs.getDouble("LATE_VISIT");
                    double vCol8 = rs.getDouble("LATE_TOTALREIMBURSE");
                    double vCol9 = rs.getDouble("TOTALALL_MAN");
                    double vCol10 = rs.getDouble("TOTALALL_VISIT");
                    double vCol11 = rs.getDouble("TOTALALL_TOTALREIMBURSE");

                    row = sheet.createRow(curRow);
                    row.setHeight((short) 360);
                    cell = row.createCell(0);
                    cell.setCellValue(vCol0);
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(1);
                    cell.setCellValue(vCol1);
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(2);
                    cell.setCellValue(vCol2);
                    cell.setCellStyle(csDetailLeft);

                    cell = row.createCell(3);
                    cell.setCellValue(vCol3);
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(4);
                    cell.setCellValue(vCol4);
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(5);
                    cell.setCellValue(vCol5);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(6);
                    cell.setCellValue(vCol6);
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(7);
                    cell.setCellValue(vCol7);
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(8);
                    cell.setCellValue(vCol8);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(9);
                    cell.setCellValue(vCol9);
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(10);
                    cell.setCellValue(vCol10);
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(11);
                    cell.setCellValue(vCol11);
                    cell.setCellStyle(csNum2);

                    curRow++;

                }

            } catch (SQLException e) {
                e.printStackTrace();
                Console.LOG(e.getMessage(), 0);
                programeStatus.setMessage(Constants.MSG_PROCESS_FAILS + e.toString());
                programeStatus.setTitle(Constants.MSG_CONTACT_ADMIN);
                programeStatus.setProcessStatus(false);
            }

            row = sheet.createRow(curRow);
            row.setHeight((short) 450);
            cell = row.createCell(0);
            cell.setCellValue("รวม");
            sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 2));
            cell.setCellStyle(csNum4B);

            cell = row.createCell(1);
            cell.setCellStyle(csNum4B);

            cell = row.createCell(2);
            cell.setCellStyle(csNum4B);

            // setValues From Database
            ResultBean beanSum = indiDao.sum_fromSummaryIndividual(report);

            cell = row.createCell(3);
            //cell.setCellFormula("SUM(D6:D" + (curRow) + ")");
            cell.setCellValue(Integer.parseInt(beanSum.getObject1().toString()));
            cell.setCellStyle(csNum4B);

            cell = row.createCell(4);
            //cell.setCellFormula("SUM(E6:E" + (curRow) + ")");
            cell.setCellValue(Integer.parseInt(beanSum.getObject2().toString()));
            cell.setCellStyle(csNum4B);

            cell = row.createCell(5);
            cell.setCellFormula("SUM(F6:F" + (curRow) + ")");
            cell.setCellStyle(csNum2B);

            cell = row.createCell(6);
            //cell.setCellFormula("SUM(G6:G" + (curRow) + ")");
            cell.setCellValue(Integer.parseInt(beanSum.getObject3().toString()));
            cell.setCellStyle(csNum4B);

            cell = row.createCell(7);
            //cell.setCellFormula("SUM(H6:H" + (curRow) + ")");
            cell.setCellValue(Integer.parseInt(beanSum.getObject4().toString()));
            cell.setCellStyle(csNum4B);

            cell = row.createCell(8);
            cell.setCellFormula("SUM(I6:I" + (curRow) + ")");
            cell.setCellStyle(csNum2B);

            cell = row.createCell(9);
            //cell.setCellFormula("SUM(J6:J" + (curRow) + ")");
            cell.setCellValue(Integer.parseInt(beanSum.getObject5().toString()));
            cell.setCellStyle(csNum4B);

            cell = row.createCell(10);
            //cell.setCellFormula("SUM(K6:K" + (curRow) + ")");
            cell.setCellValue(Integer.parseInt(beanSum.getObject6().toString()));
            cell.setCellStyle(csNum4B);

            cell = row.createCell(11);
            cell.setCellFormula("SUM(L6:L" + (curRow) + ")");
            cell.setCellStyle(csNum2B);

            // ############## footer report ################
            int footerIndex = (curRow + 2);
            row = sheet.createRow(footerIndex);
            //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
            sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
            cell = row.createCell(0);
            cell.setCellValue(UiReportIndividual.txtFooter1.getText());
            cell.setCellStyle(csDetailLeft);

            footerIndex = (curRow + 3);
            row = sheet.createRow(footerIndex);
            //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
            sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
            cell = row.createCell(0);
            cell.setCellValue(UiReportIndividual.txtFooter2.getText());
            cell.setCellStyle(csDetailLeft);

            footerIndex = (curRow + 4);
            row = sheet.createRow(footerIndex);
            //CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol)
            sheet.addMergedRegion(new CellRangeAddress(footerIndex, footerIndex, 0, 11));
            cell = row.createCell(0);
            cell.setCellValue(UiReportIndividual.txtFooter3.getText());
            cell.setCellStyle(csDetailLeft);
            // ############## footer report ################

            dAO.closeConnection();

            wb.write(out);
            out.close();
            Console.LOG("op_individual_sum ออกเรียบร้อยแล้วครับ", 1);
            programeStatus.setMessage(Constants.MSG_REPORT_SUCCESS);
            programeStatus.setTitle(Constants.MSG_REPORT_COMPLETE);
            programeStatus.setProcessStatus(true);

        } catch (Exception e) {
            e.printStackTrace();
            Console.LOG(e.getMessage(), 0);
            programeStatus.setMessage(Constants.MSG_PROCESS_FAILS + e.toString());
            programeStatus.setTitle(Constants.MSG_CONTACT_ADMIN);
            programeStatus.setProcessStatus(false);
        } finally {
            this.indiDao.closeConnection();
        }
        return programeStatus;
    }

    public ProgrameStatus op_genReportAllFunction(OppReport report) {
        boolean status = false;
        // String serviceCode = null;
        ProgrameStatus programeStatus = new ProgrameStatus();
        try {
            if (report.getFor_use() == 0) { // for genaral use

                //serviceCode = report.getServiceCode();
                //******************************************Detail************************************************
                report.setReportType(0);
                //report.setServiceCode(serviceCode);
                //programeStatus = this.op_individual_detail_SplitFile(report);
                programeStatus = this.op_individual_detail_SplitFile_caseLimitRowExcell(report);
                //******************************************Sumary************************************************
                report.setReportType(1);
                // report.setServiceCode(serviceCode);
                programeStatus = this.op_individual_sum(report);

            } else if (report.getFor_use() == 1) { // for web site claim
                report.setReportType(0);
                programeStatus = this.op_individual_detail_byHcode_1fileMutiSheet(report);
            }
        } catch (Exception e) {
            e.printStackTrace();
            Console.LOG(e.getMessage(), 0);
            programeStatus.setMessage(Constants.MSG_PROCESS_FAILS + e.toString());
            programeStatus.setTitle(Constants.MSG_CONTACT_ADMIN);
            programeStatus.setProcessStatus(false);
        }
        return programeStatus;
    }

    public String execellHeaderMonth(String stmp) {
        String execellHeaderMonth = null;
        try {
            indiDao.openConnection();

            execellHeaderMonth = indiDao.getMonthPayment(stmp);

            System.out.println("execellHeaderMonth: " + execellHeaderMonth);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            indiDao.closeConnection();
        }
        return execellHeaderMonth;
    }

    public Map spliteRecordData(List<Obj_individual> datas) {
        List<Obj_individual> listObject1 = new ArrayList<Obj_individual>();
        List<Obj_individual> listObject2 = new ArrayList<Obj_individual>();
        List<Obj_individual> listObject3 = new ArrayList<Obj_individual>();
        Map<Integer, List<Obj_individual>> mapList = new HashMap<Integer, List<Obj_individual>>();

        for (int i = 0; i < datas.size(); i++) {
            if (i <= 65500) {  // limit excell row 65,536 rows by 256 columns
                listObject1.add(datas.get(i));
            } else if (datas.size() > 65500 && datas.size() <= 131000) {
                listObject2.add(datas.get(i));
            } else {
                listObject3.add(datas.get(i));
            }
        }

        mapList.put(1, listObject1);
        mapList.put(2, listObject2);
        mapList.put(3, listObject3);

        return mapList;
    }
}
