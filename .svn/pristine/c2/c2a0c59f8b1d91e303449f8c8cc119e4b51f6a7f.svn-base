/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.claim.controller;

import com.claim.connection.ConnectionDB;
import com.claim.dao.Center16AndChulaDAO;
import com.claim.object.OppReport;
import com.claim.support.Console;
import com.claim.support.Constants;
import com.claim.support.Message;
import com.claim.support.ProgrameStatus;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.util.CellRangeAddress;

/**
 *
 * @author poon__000
 */
public class Center16AndJulaController extends ExcellBaseUtil {

    private Center16AndChulaDAO center16JulaDAO;

    public Center16AndJulaController() {
        this.center16JulaDAO = new Center16AndChulaDAO();
    }

    public ProgrameStatus center16_Jula(OppReport report) {
        FileInputStream file = null;
        FileOutputStream out = null;
        String EXCELL_HEADER1 = null;
        String EXCELL_HEADER2 = null;
        String EXCELL_HOSPITAL = null;
        ResultSet rs = null;
        ProgrameStatus programeStatus = new ProgrameStatus();
        int col_last = 26;
        int row_start = 7; // index row
        int row_formula_start = row_start + 1;
        int col_txtid_width = col_last + 1;
        try {
            this.center16JulaDAO.openConnection();

            if (report.getServiceCode().equals("13661")) { // center 16
                rs = center16JulaDAO.genReportHC16(report.getYearMonth() + "-" + report.getNo());
                EXCELL_HEADER1 = "การจ่ายเงินงบประมาณค่าบริการทางการแพทย์ OP งวดเดือน: "
                        //+ center16JulaDAO.genDateOpd(report.getYearMonth()+"-"+report.getNo());
                        + center16JulaDAO.getMonthPayment(report.getYearMonth() + "-" + report.getNo());
                EXCELL_HEADER2 = "สำหรับศูนย์บริการสาธารณสุข 16 ลุมพินี  รหัสสถานพยาบาล 13661  Model 2 ";
                EXCELL_HOSPITAL = "ชื่อหน่วยบริการที่รักษา  ศูนย์บริการสาธารณสุข 16 ลุมพินี รหัสสถานพยาบาล 13661 ";

                //out 
                out = new FileOutputStream(report.getPathFile() + "\\HC16_13661_" + report.getYearMonth() + "-" + report.getNo() + ".xls");
                report.setServiceName(" ศูนย์บริการสาธารณสุข 16 ลุมพินี");
            } else if (report.getServiceCode().equals("13756")) { //  Jula
                rs = center16JulaDAO.genReportChula(report.getYearMonth() + "-" + report.getNo());
                EXCELL_HEADER1 = "การจ่ายเงินงบประมาณค่าบริการทางการแพทย์ OP งวดเดือน: "
                        + center16JulaDAO.getMonthPayment(report.getYearMonth() + "-" + report.getNo());
                EXCELL_HEADER2 = "สำหรับศูนย์บริการสาธารณสุข 16 ลุมพินี  รหัสสถานพยาบาล 13661  Model 2";
                EXCELL_HOSPITAL = "ชื่อหน่วยบริการที่รักษา  โรงพยาบาลจุฬาลงกรณ์  สภากาชาดไทย   รหัสสถานพยาบาล  13756";

                //out 
                out = new FileOutputStream(report.getPathFile() + "\\Chula_13756_" + report.getYearMonth() + "-" + report.getNo() + ".xls");
                report.setServiceName("โรงพยาบาลจุฬาลงกรณ์");
            }

            //readTemplate 
            file = new FileInputStream(new File(".\\xls\\CH16_CHula_detail.xls"));

            // style Excell
            HSSFWorkbook wbCenter16Jula = new HSSFWorkbook(file);
            this.loadStyle(wbCenter16Jula);

            // Start sheet 1 *******************************************************************************
            HSSFSheet sheet = wb.getSheetAt(0);

            sheet.createFreezePane(4, 7); // col,row
            sheet.setColumnWidth(col_txtid_width, WIDTH_TXID);

            HSSFCell cell = null;
            HSSFRow row = null;

            // row 0 HEADER0
            row = sheet.createRow(0);
            row.setHeight((short) 390);
            cell = row.createCell(0);
            cell.setCellValue(EXCELL_HEADER1);
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, col_last));
            cell.setCellStyle(csHead);

            // row 1 HEADER2
            row = sheet.createRow(1);
            row.setHeight((short) 390);
            cell = row.createCell(0);
            cell.setCellValue(EXCELL_HEADER2);
            sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, col_last));
            cell.setCellStyle(csHead);

            // row 1 HOSPITAL
            row = sheet.createRow(2);
            row.setHeight((short) 390);
            cell = row.createCell(0);
            cell.setCellValue(EXCELL_HOSPITAL);
            sheet.addMergedRegion(new CellRangeAddress(2, 2, 0, col_last));
            cell.setCellStyle(csHead);

            int curRow = row_start;
            int i = 1;

            try {
                while (rs.next()) {
                    int col1 = i;
                    String col2 = rs.getString("pid");
                    String col3 = rs.getString("hn");
                    String col4 = rs.getString("pname");
                    //String col5 = rs.getString("hcode");
                    String col5 = rs.getString("hmain");
                    String col6 = rs.getString("dateopd_th");
                    String col7 = rs.getString("pdxcode");

                    double col8 = rs.getDouble("chrg_car");
                    double col9 = rs.getDouble("chrg_rehab_inst");
                    double col10 = rs.getDouble("chrg_ophc");
                    double col11 = rs.getDouble("chrg_197");
                    double col12 = rs.getDouble("chrg_stditem");
                    double col13 = rs.getDouble("chrg_other");
                    double col14 = rs.getDouble("chrg_total");
                    //double col15 = rs.getDouble("chrg_total_final");

                    double col15 = rs.getDouble("paid_car");
                    double col16 = rs.getDouble("paid_rehab_inst");
                    double col17 = rs.getDouble("paid_ophc");
                    double col18 = rs.getDouble("paid_car_rehabinst_ophc_total");

                    double col19 = rs.getDouble("paid_197");
                    double col20 = rs.getDouble("paid_stditem");
                    double col21 = rs.getDouble("paid_other");

                    double col22 = rs.getDouble("PAID_197_STDITEM_OTHER_TOTAL");

                    double col23 = rs.getDouble("PAID_CAL_POINT");
                    double col24 = rs.getDouble("paid_total");
                    double col25 = rs.getDouble("COMPENSATION_FEE_TOTAL");

                    String col26 = rs.getString("remark");
                    String vtxid = rs.getString("txid");
                    String vInvoice_no = rs.getString("invoice_no");

                    row = sheet.createRow(curRow);
                    row.setHeight((short) 340);

                    /*PoiHssfUtil stylePoi = new PoiHssfUtil(wb, row, cell);
                     stylePoi.setStyleText(0, String.valueOf(col1), PoiHssfUtil.CENTER);*/
                    cell = row.createCell(0);
                    cell.setCellValue(col1);
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(1);
                    cell.setCellValue(col2);
                    cell.setCellStyle(csDetailPid);

                    cell = row.createCell(2);
                    cell.setCellValue(col3);
                    cell.setCellStyle(csDetailLeft);

                    cell = row.createCell(3);
                    cell.setCellValue(col4);
                    cell.setCellStyle(csDetailLeft);

                    cell = row.createCell(4);
                    cell.setCellValue(col5);
                    cell.setCellStyle(csDetailLeft);

                    cell = row.createCell(5);
                    cell.setCellValue(col6);
                    cell.setCellStyle(csDetailLeft);

                    cell = row.createCell(6);
                    cell.setCellValue(col7);
                    cell.setCellStyle(csNum4);

                    cell = row.createCell(7);
                    cell.setCellValue(col8);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(8);
                    cell.setCellValue(col9);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(9);
                    cell.setCellValue(col10);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(10);
                    cell.setCellValue(col11);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(11);
                    cell.setCellValue(col12);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(12);
                    cell.setCellValue(col13);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(13);
                    cell.setCellValue(col14);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(14);
                    cell.setCellValue(col15);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(15);
                    cell.setCellValue(col16);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(16);
                    cell.setCellValue(col17);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(17);
                    cell.setCellValue(col18);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(18);
                    cell.setCellValue(col19);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(19);
                    cell.setCellValue(col20);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(20);
                    cell.setCellValue(col21);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(21);
                    cell.setCellValue(col22);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(22);
                    cell.setCellValue(col23);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(23);
                    cell.setCellValue(col24);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(24);
                    cell.setCellValue(col25);
                    cell.setCellStyle(csNum2);

                    cell = row.createCell(25);
                    cell.setCellValue(col26);
                    cell.setCellStyle(csDetailLeft);

                    cell = row.createCell(26);
                    cell.setCellValue(vInvoice_no);
                    cell.setCellStyle(csDetailLeft);
                    
                    cell = row.createCell(27);
                    cell.setCellValue(vtxid);
                    cell.setCellStyle(csDetailtxid);

                    curRow++;
                    i++;

                }
            } catch (SQLException e) {
                e.printStackTrace();
                Console.LOG(e.getMessage(), 0);
            } finally {
                if (rs != null) {
                    rs.close();
                }
                center16JulaDAO.closeConnection();
            }

            // สรุป
            row = sheet.createRow(curRow);
            cell = row.createCell(0);
            cell.setCellValue("รวม");
            sheet.addMergedRegion(new CellRangeAddress(curRow, curRow, 0, 6));
            cell.setCellStyle(csNum4B);

            row.createCell(1).setCellStyle(csNum4B);
            row.createCell(2).setCellStyle(csNum4B);
            row.createCell(3).setCellStyle(csNum4B);
            row.createCell(4).setCellStyle(csNum4B);
            row.createCell(5).setCellStyle(csNum4B);
            row.createCell(6).setCellStyle(csNum4B);

            cell = row.createCell(7);
            cell.setCellFormula(builderFormulaSum(7, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(8);
            cell.setCellFormula(builderFormulaSum(8, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(9);
            cell.setCellFormula(builderFormulaSum(9, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(10);
            cell.setCellFormula(builderFormulaSum(10, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(11);
            cell.setCellFormula(builderFormulaSum(11, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(12);
            cell.setCellFormula(builderFormulaSum(12, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(13);
            cell.setCellFormula(builderFormulaSum(13, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(14);
            cell.setCellFormula(builderFormulaSum(14, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(15);
            cell.setCellFormula(builderFormulaSum(15, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(16);
            cell.setCellFormula(builderFormulaSum(16, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(17);
            cell.setCellFormula(builderFormulaSum(17, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(18);
            cell.setCellFormula(builderFormulaSum(18, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(19);
            cell.setCellFormula(builderFormulaSum(19, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(20);
            cell.setCellFormula(builderFormulaSum(20, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(21);
            cell.setCellFormula(builderFormulaSum(21, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(22);
            cell.setCellFormula(builderFormulaSum(22, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(23);
            cell.setCellFormula(builderFormulaSum(23, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(24);
            cell.setCellFormula(builderFormulaSum(24, row_formula_start, curRow));
            cell.setCellStyle(csNum2B);

            cell = row.createCell(25);
            cell.setCellStyle(csNum4B);

            wb.setSheetName(0, report.getServiceCode() + "  " + report.getServiceName());

            wb.write(out);

            out.close();
            file.close();

            Console.LOG(Message.exportSuccess(report.getServiceName()), 1);
            programeStatus.setMessage(Constants.MSG_REPORT_SUCCESS);
            programeStatus.setTitle(Constants.MSG_REPORT_COMPLETE);
            programeStatus.setProcessStatus(true);
        } catch (Exception e) {
            e.printStackTrace();
            Console.LOG(e.getMessage(), 0);
            programeStatus.setMessage(Constants.MSG_PROCESS_FAILS + e.toString());
            programeStatus.setTitle(Constants.MSG_CONTACT_ADMIN);
            programeStatus.setProcessStatus(false);
        }
        return programeStatus;
    }

    public ProgrameStatus center16_Jula_All(OppReport report) {
        ProgrameStatus programeStatus = new ProgrameStatus();
        try {
            report.setServiceCode("13661");
            programeStatus = this.center16_Jula(report);

            report.setServiceCode("13756");
            programeStatus = this.center16_Jula(report);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return programeStatus;
    }
    
}
