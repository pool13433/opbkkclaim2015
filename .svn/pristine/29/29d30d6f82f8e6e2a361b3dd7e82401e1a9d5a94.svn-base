/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.claim.ui;

import com.claim.controller.LogAppController;
import com.claim.controller.OpClearingHouseController;
import com.claim.dao.UtilDao;
import com.claim.object.HospitalService;
import com.claim.object.OppReport;
import com.claim.object.Stmp;
import com.claim.support.BaseFunction;
import com.claim.support.Constants;
import com.claim.support.NetUtils;
import com.claim.support.ProgrameStatus;
import com.claim.dialog.DialogWaitProcess;
import java.awt.event.ItemEvent;
import java.io.File;
import java.net.UnknownHostException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Poolsawat.a
 */
public class UiReportClearing extends javax.swing.JInternalFrame {

    /**
     * Creates new form UiReportClearing
     */
    public static int PROCESS = 0;
    OpClearingHouseController clearingHouseController;
    List<HospitalService> listSelectHospital = null;
    List<Stmp> listStmpClearingHouse = null;
    BaseFunction baseFunction;

    public UiReportClearing() {
        initComponents();
        clearingHouseController = new OpClearingHouseController();
        listSelectHospital = new ArrayList<HospitalService>();
        listStmpClearingHouse = new ArrayList<Stmp>();
        baseFunction = new BaseFunction();

        this.loadCombo();

        PROCESS = 1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rGroupClearingCategory = new javax.swing.ButtonGroup();
        rGroupClearingType = new javax.swing.ButtonGroup();
        rGroupClearingHospital = new javax.swing.ButtonGroup();
        rGroupClearingForUse = new javax.swing.ButtonGroup();
        tabOpClearingHouse = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        comboYearClearing = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        comboNumClearing = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        radioDetailClearingHouse = new javax.swing.JRadioButton();
        radioSumClearingHouse = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        radioAllHospitalClearingHouse = new javax.swing.JRadioButton();
        radioSingleHospitalClearingHouse = new javax.swing.JRadioButton();
        btnClearingChooseHospital = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtHnameClearingHouse = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jButtonFolder1 = new javax.swing.JButton();
        txtPathFileClearingHouse = new javax.swing.JTextField();
        btn74PathFileDesktop4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        radioDeductClearingHouse = new javax.swing.JRadioButton();
        radioPaymentClearingHouse = new javax.swing.JRadioButton();
        jPanel13 = new javax.swing.JPanel();
        txtTitleTimeClearing = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        btnClearingGenReportAllFunction = new javax.swing.JButton();
        btnType5GenReport = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        radioForUse_Genaral = new javax.swing.JRadioButton();
        radioForUse_Website = new javax.swing.JRadioButton();
        jPanel10 = new javax.swing.JPanel();
        comboLookupYear = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("หน้าจอออกรายงาน ClearingHouse");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/Excel-icon.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 550));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        tabOpClearingHouse.setMinimumSize(new java.awt.Dimension(1000, 550));
        tabOpClearingHouse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabOpClearingHouseMouseClicked(evt);
            }
        });
        tabOpClearingHouse.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "งวดการจ่ายเงิน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel10.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        jLabel10.setText("ปีเดือน");

        comboYearClearing.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        comboYearClearing.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboYearClearingItemStateChanged(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        jLabel11.setText("งวดที่");

        comboNumClearing.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        comboNumClearing.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboNumClearingItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboYearClearing, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboNumClearing, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(comboYearClearing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(comboNumClearing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "รูปแบบ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        rGroupClearingType.add(radioDetailClearingHouse);
        radioDetailClearingHouse.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        radioDetailClearingHouse.setText("รายงานแบบรายละเอียด");
        radioDetailClearingHouse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioDetailClearingHouseItemStateChanged(evt);
            }
        });

        rGroupClearingType.add(radioSumClearingHouse);
        radioSumClearingHouse.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        radioSumClearingHouse.setText("รายงานแบบสรุป");
        radioSumClearingHouse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioSumClearingHouseItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(radioDetailClearingHouse, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioSumClearingHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(radioDetailClearingHouse)
                    .addComponent(radioSumClearingHouse))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "หน่วยให้บริการ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rGroupClearingHospital.add(radioAllHospitalClearingHouse);
        radioAllHospitalClearingHouse.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        radioAllHospitalClearingHouse.setText("หน่วยให้บริการทั้งหมด");
        radioAllHospitalClearingHouse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioAllHospitalClearingHouseItemStateChanged(evt);
            }
        });
        jPanel5.add(radioAllHospitalClearingHouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        rGroupClearingHospital.add(radioSingleHospitalClearingHouse);
        radioSingleHospitalClearingHouse.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        radioSingleHospitalClearingHouse.setText("เลือกบางหน่วยให้บริการ");
        radioSingleHospitalClearingHouse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioSingleHospitalClearingHouseItemStateChanged(evt);
            }
        });
        jPanel5.add(radioSingleHospitalClearingHouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        btnClearingChooseHospital.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        btnClearingChooseHospital.setText("เลือก");
        btnClearingChooseHospital.setEnabled(false);
        btnClearingChooseHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearingChooseHospitalbtchooseActionPerformed(evt);
            }
        });
        jPanel5.add(btnClearingChooseHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        txtHnameClearingHouse.setColumns(20);
        txtHnameClearingHouse.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        txtHnameClearingHouse.setLineWrap(true);
        txtHnameClearingHouse.setRows(5);
        txtHnameClearingHouse.setEnabled(false);
        jScrollPane7.setViewportView(txtHnameClearingHouse);

        jPanel5.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 560, 90));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "สถานที่เก็บไฟล์", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jButtonFolder1.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        jButtonFolder1.setText("เลือก");
        jButtonFolder1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFolder1ActionPerformed(evt);
            }
        });

        txtPathFileClearingHouse.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        txtPathFileClearingHouse.setEnabled(false);

        btn74PathFileDesktop4.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        btn74PathFileDesktop4.setText("desktop");
        btn74PathFileDesktop4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn74PathFileDesktop4jButtonFolderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn74PathFileDesktop4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFolder1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPathFileClearingHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPathFileClearingHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFolder1)
                    .addComponent(btn74PathFileDesktop4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ประเภท", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        rGroupClearingCategory.add(radioDeductClearingHouse);
        radioDeductClearingHouse.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        radioDeductClearingHouse.setText("หักเงิน");

        rGroupClearingCategory.add(radioPaymentClearingHouse);
        radioPaymentClearingHouse.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        radioPaymentClearingHouse.setText("จ่ายเงิน");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(radioDeductClearingHouse)
                .addGap(40, 40, 40)
                .addComponent(radioPaymentClearingHouse)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioPaymentClearingHouse)
                    .addComponent(radioDeductClearingHouse))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ตัวอย่างแสดงงวด หัวรายงาน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txtTitleTimeClearing.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTitleTimeClearing, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(txtTitleTimeClearing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
        );

        tabOpClearingHouse.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 630));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "เครื่องมือการออกรายงาน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel8.setPreferredSize(new java.awt.Dimension(215, 445));

        btnClearingGenReportAllFunction.setBackground(new java.awt.Color(255, 204, 0));
        btnClearingGenReportAllFunction.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        btnClearingGenReportAllFunction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/Print-icon.png"))); // NOI18N
        btnClearingGenReportAllFunction.setText("<html>ออกรายงานทุกอย่าง<br />+ Website</html>");
        btnClearingGenReportAllFunction.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        btnClearingGenReportAllFunction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearingGenReportAllFunctionActionPerformed(evt);
            }
        });

        btnType5GenReport.setBackground(new java.awt.Color(153, 153, 255));
        btnType5GenReport.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        btnType5GenReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/Print-icon.png"))); // NOI18N
        btnType5GenReport.setText("ออกรายงาน");
        btnType5GenReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnType5GenReportActionPerformed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(255, 255, 204));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ใช้เพื่อ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        rGroupClearingForUse.add(radioForUse_Genaral);
        radioForUse_Genaral.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        radioForUse_Genaral.setSelected(true);
        radioForUse_Genaral.setText("ทั่วไป");

        rGroupClearingForUse.add(radioForUse_Website);
        radioForUse_Website.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        radioForUse_Website.setText("อัพโหลด web site");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioForUse_Genaral)
                    .addComponent(radioForUse_Website))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioForUse_Genaral)
                .addGap(18, 18, 18)
                .addComponent(radioForUse_Website)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 204));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ข้อมูลปีการออกรายงาน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        comboLookupYear.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        comboLookupYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "รวมทุกปีงบ", "2015", "2014", "2013", "2012", "2011", "2010" }));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(comboLookupYear, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboLookupYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnType5GenReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClearingGenReportAllFunction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btnType5GenReport, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btnClearingGenReportAllFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabOpClearingHouse.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 10, 250, 470));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabOpClearingHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 1238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabOpClearingHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboYearClearingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboYearClearingItemStateChanged
        if (PROCESS == 1) {
            String title = baseFunction.getTitleTimeReport(comboYearClearing.getSelectedItem(), comboNumClearing.getSelectedItem());
            txtTitleTimeClearing.setText(title != null ? title : "-");
            comboNumClearing.removeAllItems();
            comboNumClearing.addItem("-");
            for (Stmp stmp : listStmpClearingHouse) {
                if (comboYearClearing.getSelectedItem().equals(stmp.getStmpYM())
                        && comboNumClearing.getSelectedItem() != stmp.getStmpN()) {
                    comboNumClearing.addItem(stmp.getStmpN());
                }
            }
        }
    }//GEN-LAST:event_comboYearClearingItemStateChanged

    private void comboNumClearingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboNumClearingItemStateChanged
        if (PROCESS == 1) {
            txtTitleTimeClearing.setText(clearingHouseController.getClearingHouseStmpGroupBy(comboYearClearing.getSelectedItem(), comboNumClearing.getSelectedItem()));
        }
    }//GEN-LAST:event_comboNumClearingItemStateChanged

    private void radioDetailClearingHouseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioDetailClearingHouseItemStateChanged
        if (radioDetailClearingHouse.isSelected()) {
        } else {
        }
    }//GEN-LAST:event_radioDetailClearingHouseItemStateChanged

    private void radioSumClearingHouseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioSumClearingHouseItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            radioSingleHospitalClearingHouse.setEnabled(false);
            btnClearingChooseHospital.setEnabled(false);
            radioAllHospitalClearingHouse.setSelected(true);
        } else {
            radioSingleHospitalClearingHouse.setEnabled(true);
            //btnClearingChooseHospital.setEnabled(true);
            radioAllHospitalClearingHouse.setSelected(false);
        }
    }//GEN-LAST:event_radioSumClearingHouseItemStateChanged

    private void radioAllHospitalClearingHouseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioAllHospitalClearingHouseItemStateChanged
        if (radioAllHospitalClearingHouse.isSelected()) {
            btnClearingChooseHospital.setEnabled(false);
            //txtHCodeClearingHouse.setText("");
            txtHnameClearingHouse.setText("");
        } else {
            radioAllHospitalClearingHouse.setEnabled(true);
        }
    }//GEN-LAST:event_radioAllHospitalClearingHouseItemStateChanged

    private void radioSingleHospitalClearingHouseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioSingleHospitalClearingHouseItemStateChanged
        if (radioSingleHospitalClearingHouse.isSelected()) {
            btnClearingChooseHospital.setEnabled(true);
        } else {
            radioSingleHospitalClearingHouse.setEnabled(true);
        }
    }//GEN-LAST:event_radioSingleHospitalClearingHouseItemStateChanged

    private void btnClearingChooseHospitalbtchooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearingChooseHospitalbtchooseActionPerformed
        txtHnameClearingHouse.setText("");
        if (listSelectHospital.size() > 0) {
            listSelectHospital.removeAll(listSelectHospital);
            System.out.println("Clear listSelectHospital success");
        }
        HashMap mapParam = new HashMap();
        mapParam.put("type", "clearingHouse");
        mapParam.put("name", txtHnameClearingHouse);
        mapParam.put("listHospital", listSelectHospital);
        DialogService dialog = new DialogService();
        dialog.DialogServiceJInternalFrame(this, closable, mapParam);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnClearingChooseHospitalbtchooseActionPerformed

    private void jButtonFolder1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFolder1ActionPerformed

        try {
            JFileChooser fc = new JFileChooser();
            fc.setDialogTitle("Open Folder");
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            fc.setCurrentDirectory(new File(""));
            int result = fc.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File a = fc.getSelectedFile();
                // Path File method in this class
                String temp = a.getPath();
                txtPathFileClearingHouse.setText(".");

                if (temp != null) {
                    txtPathFileClearingHouse.setText(temp);
                    btnClearingChooseHospital.setEnabled(true);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonFolder1ActionPerformed

    private void btn74PathFileDesktop4jButtonFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn74PathFileDesktop4jButtonFolderActionPerformed
        try {
            String desktopPath = System.getProperty("user.home") + "\\" + "Desktop";
            System.out.println("pathDesktop==>>" + desktopPath);
            txtPathFileClearingHouse.setText(desktopPath);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn74PathFileDesktop4jButtonFolderActionPerformed

    private void btnType5GenReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnType5GenReportActionPerformed
        final DialogWaitProcess wait = new DialogWaitProcess();

        try {
            if (comboYearClearing.getSelectedIndex() != 0) {
                if (comboNumClearing.getSelectedIndex() != 0) {
                    if (radioAllHospitalClearingHouse.isSelected() || radioSingleHospitalClearingHouse.isSelected()) {
                        if (radioAllHospitalClearingHouse.isSelected() || (radioSingleHospitalClearingHouse.isSelected() && listSelectHospital.size() > 0)) {
                            if (radioDeductClearingHouse.isSelected() || radioPaymentClearingHouse.isSelected()) {
                                if (!txtPathFileClearingHouse.getText().isEmpty()) {
                                    int selectOption = JOptionPane.showConfirmDialog(null,
                                            Constants.MSG_REPORT_CONFIRM,
                                            Constants.MSG_REPORT_INFOMATION, JOptionPane.YES_NO_OPTION);
                                    if (selectOption == JOptionPane.YES_OPTION) {
                                        wait.setVisible(true);

                                        Thread thread = new Thread(new Runnable() {
                                            @Override
                                            public void run() {
                                                ProgrameStatus programeStatus = new ProgrameStatus();
                                                try {
                                                    wait.setTitle(Constants.MSG_PROGRAME_PROCESSSING);
                                                    if (radioDetailClearingHouse.isSelected()) { // รายละเอียด
                                                        if (radioDeductClearingHouse.isSelected()) {  // หัก deduct
                                                            programeStatus = clearingHouseController.clearing_detailDedug_byHCode(setInputFormReport());
                                                            programeStatus = clearingHouseController.clearing_detailDedug_hCodeByHmain(setInputFormReport());

                                                            if (programeStatus.getProcessStatus()) {
                                                                JOptionPane.showMessageDialog(UiReportClearing.this,
                                                                        programeStatus.getMessage(),
                                                                        programeStatus.getTitle(),
                                                                        JOptionPane.INFORMATION_MESSAGE);
                                                            } else {
                                                                JOptionPane.showMessageDialog(UiReportClearing.this,
                                                                        programeStatus.getMessage(),
                                                                        programeStatus.getTitle(),
                                                                        JOptionPane.ERROR_MESSAGE);
                                                            }

                                                        } else {
                                                            programeStatus = clearingHouseController.clearing_detailPay_byHcode(setInputFormReport());
                                                            programeStatus = clearingHouseController.clearing_detailPay_hcodeByHmain(setInputFormReport());
                                                            if (programeStatus.getProcessStatus()) {
                                                                JOptionPane.showMessageDialog(UiReportClearing.this,
                                                                        programeStatus.getMessage(),
                                                                        programeStatus.getTitle(),
                                                                        JOptionPane.INFORMATION_MESSAGE);
                                                            } else {
                                                                JOptionPane.showMessageDialog(UiReportClearing.this,
                                                                        programeStatus.getMessage(),
                                                                        programeStatus.getTitle(),
                                                                        JOptionPane.ERROR_MESSAGE);
                                                            }
                                                        }
                                                    } else { // สรุป
                                                        if (radioDeductClearingHouse.isSelected()) { // หัก deduct
                                                            programeStatus = clearingHouseController.clearing_sumDeduct(setInputFormReport());
                                                            if (programeStatus.getProcessStatus()) {
                                                                JOptionPane.showMessageDialog(UiReportClearing.this,
                                                                        programeStatus.getMessage(),
                                                                        programeStatus.getTitle(),
                                                                        JOptionPane.INFORMATION_MESSAGE);
                                                            } else {
                                                                JOptionPane.showMessageDialog(UiReportClearing.this,
                                                                        programeStatus.getMessage(),
                                                                        programeStatus.getTitle(),
                                                                        JOptionPane.ERROR_MESSAGE);
                                                            }
                                                        } else {
                                                            programeStatus = clearingHouseController.clearing_sumPay(setInputFormReport());
                                                            if (programeStatus.getProcessStatus()) {
                                                                JOptionPane.showMessageDialog(UiReportClearing.this,
                                                                        programeStatus.getMessage(),
                                                                        programeStatus.getTitle(),
                                                                        JOptionPane.INFORMATION_MESSAGE);
                                                            } else {
                                                                JOptionPane.showMessageDialog(UiReportClearing.this,
                                                                        programeStatus.getMessage(),
                                                                        programeStatus.getTitle(),
                                                                        JOptionPane.ERROR_MESSAGE);
                                                            }
                                                        }
                                                    }
                                                    wait.setVisible(false);
                                                    new BaseFunction().openDirectoryAutomatic(setInputFormReport().getPathFile());
                                                } catch (Exception e) {
                                                    e.printStackTrace();
                                                }
                                                /*
                                            * 17-08-2015
                                            */
                                            /* try {
                                                    new LogAppController().createLog("ทำการออกรายงาน", "ทำการออกรายงาน clearing hourse แบบ แยกออกบาง ฟังก์ชัน ", NetUtils.getIpAddress(), 1);
                                                } catch (UnknownHostException ex) {
                                                    Logger.getLogger(UiMainClaim.class.getName()).log(Level.SEVERE, null, ex);
                                                }*/
                                            }
                                        });
                                        thread.start();
                                    }

                                } else {
                                    JOptionPane.showMessageDialog(this,
                                            Constants.MSG_FILE_LOCATION_PLEASE,
                                            Constants.MSG_FILE_LOCATION,
                                            JOptionPane.ERROR_MESSAGE);
                                }
                            } else {
                                JOptionPane.showMessageDialog(this,
                                        Constants.MSG_REPORT_TYPE,
                                        Constants.MSG_SELECT_DATA,
                                        JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this,
                                    Constants.MSG_HOSPITAL_SELECT_PLEASE,
                                    Constants.MSG_SELECT_DATA,
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                Constants.MSG_REPOTR_FORMAT,
                                Constants.MSG_SELECT_DATA,
                                JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this,
                            Constants.MSG_SELECT_NO,
                            Constants.MSG_SELECT_DATA,
                            JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this,
                        Constants.MSG_SELECT_DATE_PLEASE,
                        Constants.MSG_SELECT_DATA,
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnType5GenReportActionPerformed

    private void btnClearingGenReportAllFunctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearingGenReportAllFunctionActionPerformed

        //        for (String hopital : listSelectHospital) {
        //            System.err.println("hopital : " + hopital);
        //        }
        try {
            final DialogWaitProcess wait = new DialogWaitProcess();
            if (comboYearClearing.getSelectedIndex() != 0) {
                if (comboNumClearing.getSelectedIndex() != 0) {
                    if (radioAllHospitalClearingHouse.isSelected() || radioSingleHospitalClearingHouse.isSelected()) {
                        if (radioAllHospitalClearingHouse.isSelected() || radioSingleHospitalClearingHouse.isSelected() && listSelectHospital.size() > 0) {
                            if (!txtPathFileClearingHouse.getText().isEmpty()) {
                                int selectOption = JOptionPane.showConfirmDialog(null,
                                        Constants.MSG_REPORT_CONFIRM,
                                        Constants.MSG_REPORT_INFOMATION, JOptionPane.YES_NO_OPTION);
                                if (selectOption == JOptionPane.YES_OPTION) {
                                    wait.setVisible(true);

                                    Thread thread = new Thread(new Runnable() {
                                        @Override
                                        public void run() {
                                            boolean status = false;
                                            try {
                                                wait.setTitle(Constants.MSG_PROGRAME_PROCESSSING);
                                                status = clearingHouseController.clearing_genReportAllFunction(setInputFormReport());
                                                if (status) {
                                                    JOptionPane.showMessageDialog(UiReportClearing.this,
                                                            Constants.MSG_REPORT_SUCCESS,
                                                            Constants.MSG_REPORT_COMPLETE,
                                                            JOptionPane.INFORMATION_MESSAGE);
                                                    baseFunction.openDirectoryAutomatic(setInputFormReport().getPathFile());

                                                } else {
                                                    JOptionPane.showMessageDialog(UiReportClearing.this,
                                                            Constants.MSG_CAN_NOT_REPORT_ERROR,
                                                            Constants.MSG_PROCESS_FAILS,
                                                            JOptionPane.ERROR_MESSAGE);
                                                }
                                                wait.setVisible(false);
                                            } catch (Exception e) {
                                                e.printStackTrace();
                                            }
                                             /*
                                            * 17-08-2015
                                            */
                                            /*try {
                                                new LogAppController().createLog("ทำการออกรายงาน", "ทำการออกรายงาน clearing hourse แบบ ฟังก์ชั้นการทำงานทั้งหมด ", NetUtils.getIpAddress(), 1);
                                            } catch (UnknownHostException ex) {
                                                Logger.getLogger(UiMainClaim.class.getName()).log(Level.SEVERE, null, ex);
                                            }*/
                                        }
                                    });
                                    thread.start();

                                }
                            } else {
                                JOptionPane.showMessageDialog(this,
                                        Constants.MSG_FILE_LOCATION_PLEASE,
                                        Constants.MSG_FILE_LOCATION,
                                        JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this,
                                    Constants.MSG_HOSPITAL_SELECT_PLEASE,
                                    Constants.MSG_SELECT_DATA,
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                Constants.MSG_HOSPITAL_ATTRIBUTE,
                                Constants.MSG_SELECT_DATA,
                                JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this,
                            Constants.MSG_SELECT_NO,
                            Constants.MSG_SELECT_DATA,
                            JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this,
                        Constants.MSG_SELECT_NO,
                        Constants.MSG_SELECT_NO_FOR_PAYMENT,
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnClearingGenReportAllFunctionActionPerformed
    public OppReport setInputFormReport() {
        OppReport report = new OppReport();
        report.setYearMonth(comboYearClearing.getSelectedItem().toString());
        report.setNo(comboNumClearing.getSelectedItem().toString());
        report.setPathFile(txtPathFileClearingHouse.getText());
        if (radioDetailClearingHouse.isSelected()) {
            report.setReportType(0);
        } else {
            report.setReportType(1);
        }
        if (radioSingleHospitalClearingHouse.isSelected()) {
            //report.setServiceCode(txtHCodeClearingHouse.getText());
            report.setListServiceCode(listSelectHospital);
        }
        report.setMonth(baseFunction.subStringYearMonth(comboYearClearing.getSelectedItem().toString()).get("M").toString());
        report.setYear(baseFunction.subStringYearMonth(comboYearClearing.getSelectedItem().toString()).get("Y").toString());

        if (radioDeductClearingHouse.isSelected()) {
            report.setCategory('D'); // Deduct
        } else {
            report.setCategory('P'); // payment
        }
        report.setMonth(baseFunction.subStringYearMonth(comboYearClearing.getSelectedItem().toString()).get("M").toString());
        report.setYear(baseFunction.subStringYearMonth(comboYearClearing.getSelectedItem().toString()).get("Y").toString());
        report.setTitle1(txtTitleTimeClearing.getText());
        if (radioForUse_Genaral.isSelected()) {
            report.setFor_use(0);
        } else if (radioForUse_Website.isSelected()) {
            report.setFor_use(1);
        }
        if (comboLookupYear.getSelectedIndex() == 0) {
            report.setBudget_year("");
        } else {
            report.setBudget_year(String.valueOf(comboLookupYear.getSelectedItem()));
        }
        return report;
    }

    public void loadCombo() {
        try {
            //Tab OpaeClearingHouse
            //get Stmp From Table RPT_OPBKK_TYPE6
            comboYearClearing.removeAllItems();
            comboYearClearing.addItem("-");

            listStmpClearingHouse = new UtilDao().getStmpDistinct("RPT_OPBKK_TYPE6", "STMP");

            List<String> listClearing = new ArrayList<String>();

            for (int i = 0; i < listStmpClearingHouse.size(); i++) {
                listClearing.add(listStmpClearingHouse.get(i).getStmpYM());
            }

            Collections.sort(listClearing);
            for (String string : listClearing) {
                comboYearClearing.addItem(string);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private void tabOpClearingHouseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabOpClearingHouseMouseClicked

    }//GEN-LAST:event_tabOpClearingHouseMouseClicked

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        PROCESS = 0;
    }//GEN-LAST:event_formInternalFrameClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn74PathFileDesktop4;
    private javax.swing.JButton btnClearingChooseHospital;
    private javax.swing.JButton btnClearingGenReportAllFunction;
    private javax.swing.JButton btnType5GenReport;
    private javax.swing.JComboBox comboLookupYear;
    private javax.swing.JComboBox comboNumClearing;
    private javax.swing.JComboBox comboYearClearing;
    private javax.swing.JButton jButtonFolder1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.ButtonGroup rGroupClearingCategory;
    private javax.swing.ButtonGroup rGroupClearingForUse;
    private javax.swing.ButtonGroup rGroupClearingHospital;
    private javax.swing.ButtonGroup rGroupClearingType;
    private javax.swing.JRadioButton radioAllHospitalClearingHouse;
    private javax.swing.JRadioButton radioDeductClearingHouse;
    private javax.swing.JRadioButton radioDetailClearingHouse;
    private javax.swing.JRadioButton radioForUse_Genaral;
    private javax.swing.JRadioButton radioForUse_Website;
    private javax.swing.JRadioButton radioPaymentClearingHouse;
    private javax.swing.JRadioButton radioSingleHospitalClearingHouse;
    private javax.swing.JRadioButton radioSumClearingHouse;
    private javax.swing.JPanel tabOpClearingHouse;
    private javax.swing.JTextArea txtHnameClearingHouse;
    private javax.swing.JTextField txtPathFileClearingHouse;
    private javax.swing.JTextField txtTitleTimeClearing;
    // End of variables declaration//GEN-END:variables
}
