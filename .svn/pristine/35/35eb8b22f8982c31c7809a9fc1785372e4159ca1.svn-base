/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.claim.ui;

import com.claim.controller.HCBegin28062015Controller;
import com.claim.dao.UtilDao;
import com.claim.object.HospitalService;
import com.claim.object.OppReport;
import com.claim.object.Stmp;
import com.claim.support.BaseFunction;
import com.claim.support.Console;
import com.claim.support.Constants;
import com.claim.support.ProgrameStatus;
import com.claim.dialog.DialogWaitProcess;
import com.claim.support.CollectionUtil;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Poolsawat.a 
 * Create at 21-08-2015
 */
public class UiReportHCBegin28062015 extends javax.swing.JInternalFrame {

    /**
     * Creates new form UiReportRefer
     */
    public static int PROCESS = 0;
    HCBegin28062015Controller hcController;
    List<HospitalService> listSelectHospital = null;
    List<Stmp> listStmpRefer = null;
    BaseFunction baseFunction;

    public UiReportHCBegin28062015() {
        initComponents();
        hcController = new HCBegin28062015Controller();
        listSelectHospital = new ArrayList<HospitalService>();
        listStmpRefer = new ArrayList<Stmp>();
        baseFunction = new BaseFunction();

        this.loadCombo();

        PROCESS = 1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rGroupReferType = new javax.swing.ButtonGroup();
        rGroupReferHospital = new javax.swing.ButtonGroup();
        rGroupReferCategory = new javax.swing.ButtonGroup();
        rGroupReferAttribute = new javax.swing.ButtonGroup();
        rGroupReferForUse = new javax.swing.ButtonGroup();
        rGroupReferSpecial = new javax.swing.ButtonGroup();
        tabHC = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        comboYearHC = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        comboNumHC = new javax.swing.JComboBox();
        jPanel28 = new javax.swing.JPanel();
        radioDetailHC = new javax.swing.JRadioButton();
        radioSumHC = new javax.swing.JRadioButton();
        jPanel29 = new javax.swing.JPanel();
        radioAllHospitalHC = new javax.swing.JRadioButton();
        radioSingleHospitalHC = new javax.swing.JRadioButton();
        btnHCChooseHospital = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtHnameHc = new javax.swing.JTextArea();
        jPanel30 = new javax.swing.JPanel();
        btnHCPathFile = new javax.swing.JButton();
        txtPathFileHC = new javax.swing.JTextField();
        btnHCPathFileDesktop = new javax.swing.JButton();
        jPanel31 = new javax.swing.JPanel();
        radioDeductHC = new javax.swing.JRadioButton();
        radioPaymentHC = new javax.swing.JRadioButton();
        jPanel32 = new javax.swing.JPanel();
        radioAttributeSingleHC = new javax.swing.JRadioButton();
        radioAttributeAllHC = new javax.swing.JRadioButton();
        radioAttributeHC = new javax.swing.JRadioButton();
        jPanel35 = new javax.swing.JPanel();
        txtTitleTimeHC = new javax.swing.JTextField();
        jPanel45 = new javax.swing.JPanel();
        radio_special_HC_1 = new javax.swing.JRadioButton();
        radio_special_HC_all = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        btnHCGenReport = new javax.swing.JButton();
        btnHCGenReportAllFunction = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        radioForUse_Genaral = new javax.swing.JRadioButton();
        radioForUse_Website = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        comboLookupYear = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("หน้าจอออกรายงาน รายงาน OPศบส.- วชิรฯ");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/Excel-icon.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 550));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        tabHC.setPreferredSize(new java.awt.Dimension(1000, 550));
        tabHC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "งวดการจ่ายเงิน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 20))); // NOI18N
        jPanel27.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        jLabel7.setText("ปีเดือน");

        comboYearHC.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        comboYearHC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboYearHCItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        jLabel8.setText("งวดที่");

        comboNumHC.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        comboNumHC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboNumHCItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboYearHC, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboNumHC, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(comboNumHC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(comboYearHC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel28.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "รูปแบบ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 18))); // NOI18N

        rGroupReferType.add(radioDetailHC);
        radioDetailHC.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radioDetailHC.setSelected(true);
        radioDetailHC.setText("รายงานแบบรายละเอียด");

        rGroupReferType.add(radioSumHC);
        radioSumHC.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radioSumHC.setText("รายงานแบบสรุป");
        radioSumHC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioSumHCItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(radioDetailHC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioSumHC)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioDetailHC)
                    .addComponent(radioSumHC))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "หน่วยให้บริการ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 18))); // NOI18N
        jPanel29.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rGroupReferHospital.add(radioAllHospitalHC);
        radioAllHospitalHC.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radioAllHospitalHC.setSelected(true);
        radioAllHospitalHC.setText("หน่วยให้บริการทั้งหมด");
        radioAllHospitalHC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioAllHospitalHCItemStateChanged(evt);
            }
        });
        jPanel29.add(radioAllHospitalHC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        rGroupReferHospital.add(radioSingleHospitalHC);
        radioSingleHospitalHC.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radioSingleHospitalHC.setText("เลือกบางหน่วยให้บริการ");
        radioSingleHospitalHC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioSingleHospitalHCItemStateChanged(evt);
            }
        });
        jPanel29.add(radioSingleHospitalHC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        btnHCChooseHospital.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        btnHCChooseHospital.setText("เลือก");
        btnHCChooseHospital.setEnabled(false);
        btnHCChooseHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHCChooseHospitalActionPerformed(evt);
            }
        });
        jPanel29.add(btnHCChooseHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        txtHnameHc.setColumns(20);
        txtHnameHc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtHnameHc.setLineWrap(true);
        txtHnameHc.setRows(5);
        txtHnameHc.setEnabled(false);
        jScrollPane11.setViewportView(txtHnameHc);

        jPanel29.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 550, 90));

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "สถานที่เก็บไฟล์", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 18))); // NOI18N

        btnHCPathFile.setText("เลือก");
        btnHCPathFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHCPathFileActionPerformed(evt);
            }
        });

        txtPathFileHC.setEnabled(false);

        btnHCPathFileDesktop.setText("desktop");
        btnHCPathFileDesktop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHCPathFileDesktopjButtonFolderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHCPathFileDesktop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHCPathFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPathFileHC)
                .addContainerGap())
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHCPathFile)
                    .addComponent(txtPathFileHC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHCPathFileDesktop))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ประเภท", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 18))); // NOI18N

        rGroupReferCategory.add(radioDeductHC);
        radioDeductHC.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radioDeductHC.setText("หักเงิน");
        radioDeductHC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioDeductHCItemStateChanged(evt);
            }
        });

        rGroupReferCategory.add(radioPaymentHC);
        radioPaymentHC.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radioPaymentHC.setText("จ่ายเงิน");
        radioPaymentHC.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioPaymentHCItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(radioDeductHC)
                .addGap(18, 18, 18)
                .addComponent(radioPaymentHC)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioPaymentHC)
                    .addComponent(radioDeductHC))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ลักษณะหน่วยบริการ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 18))); // NOI18N

        rGroupReferAttribute.add(radioAttributeSingleHC);
        radioAttributeSingleHC.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radioAttributeSingleHC.setSelected(true);
        radioAttributeSingleHC.setText("เดี่ยว");

        rGroupReferAttribute.add(radioAttributeAllHC);
        radioAttributeAllHC.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radioAttributeAllHC.setText("เครือ");

        rGroupReferAttribute.add(radioAttributeHC);
        radioAttributeHC.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radioAttributeHC.setText("ทั้งหมด");

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(radioAttributeSingleHC)
                .addGap(18, 18, 18)
                .addComponent(radioAttributeAllHC)
                .addGap(18, 18, 18)
                .addComponent(radioAttributeHC)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioAttributeAllHC)
                    .addComponent(radioAttributeSingleHC)
                    .addComponent(radioAttributeHC))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ตัวอย่างแสดงงวด หัวรายงาน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 18))); // NOI18N
        jPanel35.setPreferredSize(new java.awt.Dimension(972, 83));

        txtTitleTimeHC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(txtTitleTimeHC, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addComponent(txtTitleTimeHC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel45.setBackground(new java.awt.Color(255, 208, 208));
        jPanel45.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "พิเศษ รายละเอียด", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 20))); // NOI18N

        radio_special_HC_1.setBackground(new java.awt.Color(168, 226, 251));
        rGroupReferSpecial.add(radio_special_HC_1);
        radio_special_HC_1.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radio_special_HC_1.setSelected(true);
        radio_special_HC_1.setText("1 ไฟล์ 1 hcode");

        radio_special_HC_all.setBackground(new java.awt.Color(172, 255, 113));
        rGroupReferSpecial.add(radio_special_HC_all);
        radio_special_HC_all.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radio_special_HC_all.setText("1 ไฟล์ แบ่ง hcode แยก sheet");

        javax.swing.GroupLayout jPanel45Layout = new javax.swing.GroupLayout(jPanel45);
        jPanel45.setLayout(jPanel45Layout);
        jPanel45Layout.setHorizontalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel45Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radio_special_HC_1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radio_special_HC_all, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );
        jPanel45Layout.setVerticalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel45Layout.createSequentialGroup()
                .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_special_HC_1)
                    .addComponent(radio_special_HC_all))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(5, 5, 5)))
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        tabHC.add(jPanel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 900, 520));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "เครื่องมือการออกรายงาน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(215, 445));

        btnHCGenReport.setBackground(new java.awt.Color(153, 153, 255));
        btnHCGenReport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHCGenReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/Print-icon.png"))); // NOI18N
        btnHCGenReport.setText("ออกรายงาน");
        btnHCGenReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHCGenReportActionPerformed(evt);
            }
        });

        btnHCGenReportAllFunction.setBackground(new java.awt.Color(255, 204, 0));
        btnHCGenReportAllFunction.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHCGenReportAllFunction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/Print-icon.png"))); // NOI18N
        btnHCGenReportAllFunction.setText("<html>ออกรายงานทุกอย่าง<br />+ Website</html>");
        btnHCGenReportAllFunction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHCGenReportAllFunctionActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ใช้เพื่อ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        rGroupReferForUse.add(radioForUse_Genaral);
        radioForUse_Genaral.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        radioForUse_Genaral.setSelected(true);
        radioForUse_Genaral.setText("ทั่วไป");

        rGroupReferForUse.add(radioForUse_Website);
        radioForUse_Website.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        radioForUse_Website.setText("อัพโหลด web site");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioForUse_Genaral)
                    .addComponent(radioForUse_Website))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioForUse_Genaral)
                .addGap(26, 26, 26)
                .addComponent(radioForUse_Website)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ข้อมูลปีการออกรายงาน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        comboLookupYear.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        comboLookupYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "รวมทุกปีงบ", "2015", "2014", "2013", "2012", "2011", "2010" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(comboLookupYear, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboLookupYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnHCGenReport, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHCGenReportAllFunction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(btnHCGenReport, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnHCGenReportAllFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabHC.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 0, 240, 450));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabHC, javax.swing.GroupLayout.PREFERRED_SIZE, 1074, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tabHC, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboYearHCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboYearHCItemStateChanged

        if (comboYearHC.getItemCount() > 0 && comboNumHC.getItemCount() > 0) {
            String year = comboYearHC.getSelectedItem().toString();
            String month = comboNumHC.getSelectedItem().toString();

            String title = baseFunction.getTitleTimeReport(year, month);
            txtTitleTimeHC.setText(title);
        }
        comboNumHC.removeAllItems();
        comboNumHC.addItem("-");
        for (Stmp stmp : listStmpRefer) {
            //System.out.println("comboYearOpaeIndv.getSelectedItem()++"+comboYearOpaeIndv.getSelectedItem());
            //System.out.println("stmp.getStmpYM()++"+stmp.getStmpYM());
            if (comboYearHC.getSelectedItem().equals(stmp.getStmpYM())
                    && comboNumHC.getSelectedItem() != stmp.getStmpN()) {
                comboNumHC.addItem(stmp.getStmpN());
            }
        }
    }//GEN-LAST:event_comboYearHCItemStateChanged

    private void comboNumHCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboNumHCItemStateChanged
        if (PROCESS == 1) {
            if (comboYearHC.getSelectedItem() != null && comboNumHC.getSelectedItem() != null) {
                txtTitleTimeHC.setText(baseFunction.getTitleTimeReport(comboYearHC.getSelectedItem().toString(), comboNumHC.getSelectedItem().toString()));
            }
        }
    }//GEN-LAST:event_comboNumHCItemStateChanged

    private void radioSumHCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioSumHCItemStateChanged
        if (radioSumHC.isSelected()) {
            radioAllHospitalHC.setSelected(true);
            radioSingleHospitalHC.setEnabled(false);
            btnHCChooseHospital.setEnabled(false);
        } else {
            radioSingleHospitalHC.setEnabled(true);
            //btnReferChooseHospital.setEnabled(true);
        }
    }//GEN-LAST:event_radioSumHCItemStateChanged

    private void radioAllHospitalHCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioAllHospitalHCItemStateChanged
        if (radioAllHospitalHC.isSelected()) {
            btnHCChooseHospital.setEnabled(false);
            //txtHCodeOpaeRefer.setText("");
            txtHnameHc.setText("");
        } else {
            radioAllHospitalHC.setEnabled(true);
        }
    }//GEN-LAST:event_radioAllHospitalHCItemStateChanged

    private void radioSingleHospitalHCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioSingleHospitalHCItemStateChanged
        if (radioSingleHospitalHC.isSelected()) {
            btnHCChooseHospital.setEnabled(true);
        } else {
            radioSingleHospitalHC.setEnabled(true);
        }
    }//GEN-LAST:event_radioSingleHospitalHCItemStateChanged

    private void btnHCChooseHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHCChooseHospitalActionPerformed
        txtHnameHc.setText("");
        HashMap mapParam = new HashMap();
        mapParam.put("type", "oprefer");
        //mapParam.put("code", txtHCodeOpaeRefer);
        mapParam.put("name", txtHnameHc);
        mapParam.put("listHospital", listSelectHospital);
        DialogService dialog = new DialogService();
        dialog.DialogServiceJInternalFrame(this, closable, mapParam);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnHCChooseHospitalActionPerformed

    private void btnHCPathFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHCPathFileActionPerformed
        try {
            JFileChooser fc = new JFileChooser();
            fc.setDialogTitle("Open Folder");
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            fc.setCurrentDirectory(new File(""));
            int result = fc.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File a = fc.getSelectedFile();
                // Path File method in this class
                String temp = a.getPath();
                txtPathFileHC.setText(".");

                if (temp != null) {
                    txtPathFileHC.setText(temp);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnHCPathFileActionPerformed

    private void btnHCPathFileDesktopjButtonFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHCPathFileDesktopjButtonFolderActionPerformed
        try {
            String desktopPath = System.getProperty("user.home") + "\\" + "Desktop";
            System.out.println("pathDesktop==>>" + desktopPath);
            txtPathFileHC.setText(desktopPath);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnHCPathFileDesktopjButtonFolderActionPerformed

    private void radioDeductHCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioDeductHCItemStateChanged
        //        if (radioDeductOpRefer.isSelected()) {
        //            radioAttributeOpRefer.setEnabled(false);
        //        } else {
        //            radioAttributeOpRefer.setEnabled(true);
        //        }
    }//GEN-LAST:event_radioDeductHCItemStateChanged

    private void radioPaymentHCItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioPaymentHCItemStateChanged
        if (radioPaymentHC.isSelected()) {
            radioAttributeAllHC.setEnabled(false);
            radioAttributeSingleHC.setEnabled(false);
            radioAttributeHC.setSelected(true);
        } else {
            radioAttributeAllHC.setEnabled(true);
            radioAttributeSingleHC.setEnabled(true);
        }
    }//GEN-LAST:event_radioPaymentHCItemStateChanged

    private void btnHCGenReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHCGenReportActionPerformed
        final DialogWaitProcess wait = new DialogWaitProcess();

        try {
            if (comboYearHC.getSelectedIndex() != 0) { // check combo stmp year
                if (comboNumHC.getSelectedIndex() != 0) { // check combo Number
                    if (radioDetailHC.isSelected() || radioSumHC.isSelected()) { // check radio detail || summary
                        if (radioAllHospitalHC.isSelected() || radioSingleHospitalHC.isSelected()) { // check รูปแบบหน่วยบริการ ฟังก์ชั้นการทำงานทั้งหมดหรือเดี่ยว
                            if (radioAllHospitalHC.isSelected() || radioSingleHospitalHC.isSelected() && listSelectHospital.size() > 0) {
                                if (radioDeductHC.isSelected() || radioPaymentHC.isSelected()) {
                                    if (radioAttributeAllHC.isSelected() || radioAttributeSingleHC.isSelected() || radioAttributeHC.isSelected()) {
                                        if (!txtPathFileHC.getText().isEmpty()) {
                                            int selectOption = JOptionPane.showConfirmDialog(null,
                                                    Constants.MSG_REPORT_CONFIRM,
                                                    Constants.MSG_REPORT_INFOMATION, JOptionPane.YES_NO_OPTION);
                                            if (selectOption == JOptionPane.YES_OPTION) {
                                                wait.setVisible(true);

                                                Thread thread = new Thread(new Runnable() {
                                                    @Override
                                                    public void run() {
                                                        ProgrameStatus programeStatus = new ProgrameStatus();
                                                        try {
                                                            wait.setTitle(Constants.MSG_PROGRAME_PROCESSSING);
                                                            OppReport report = setInputFormReport();
                                                            if (radioDetailHC.isSelected()) { // รายละเอียด

                                                                if (radioDeductHC.isSelected()) {// หัก

                                                                   /* if (radioAttributeSingleHC.isSelected()) { //เดี่ยว
                                                                        if (radio_special_HC_1.isSelected()) {
                                                                            programeStatus = hcController.refer_detailDeduct_singleClinic_1sheet1file(report);
                                                                        } else if (radio_special_HC_all.isSelected()) {
                                                                            programeStatus = hcController.refer_detailDeduct_singleClinic(report);
                                                                        } else {
                                                                            System.out.println(" No Select");
                                                                        }
                                                                    } else if (radioAttributeAllHC.isSelected()) { // เครือ
                                                                        if (radio_special_HC_1.isSelected()) {
                                                                            programeStatus = hcController.refer_detailDeduct_clinicAndHospital_1sheet1file(report);
                                                                        } else if (radio_special_HC_all.isSelected()) {
                                                                            programeStatus = hcController.refer_detailDeduct_clinicAndHospital(report);
                                                                        } else {
                                                                            System.out.println(" No Select");
                                                                        }
                                                                    } else {
                                                                        if (radio_special_HC_1.isSelected()) {
                                                                            programeStatus = referController.refer_detailDeduct_1sheet1file(report);
                                                                        } else if (radio_special_HC_all.isSelected()) {
                                                                            programeStatus = referController.refer_detailDeduct(report);
                                                                        } else {
                                                                            System.out.println(" No Select");
                                                                        }

                                                                    }*/
                                                                } else { // จ่าย
                                                                    /*if (radio_special_HC_1.isSelected()) {
                                                                        programeStatus = referController.refer_detailPayment_1sheet1file(report);
                                                                    } else if (radio_special_HC_all.isSelected()) {
                                                                        programeStatus = referController.refer_detailPayment(report);
                                                                    } else {
                                                                        System.out.println(" No Select");
                                                                    }*/

                                                                }
                                                                if (programeStatus.getProcessStatus()) {
                                                                    JOptionPane.showMessageDialog(UiReportHCBegin28062015.this,
                                                                            programeStatus.getMessage(),
                                                                            programeStatus.getTitle(),
                                                                            JOptionPane.INFORMATION_MESSAGE);
                                                                    new BaseFunction().openDirectoryAutomatic(setInputFormReport().getPathFile());
                                                                } else {
                                                                    JOptionPane.showMessageDialog(UiReportHCBegin28062015.this,
                                                                            programeStatus.getMessage(),
                                                                            programeStatus.getTitle(),
                                                                            JOptionPane.ERROR_MESSAGE);
                                                                }
                                                            } else { // สรุป

                                                                /*if (radioDeductHC.isSelected()) {// หัก
                                                                    if (radioAttributeSingleHC.isSelected()) { //เดี่ยว
                                                                        programeStatus = referController.refer_sumDeduct_singleClinic(setInputFormReport());
                                                                    } else if (radioAttributeAllHC.isSelected()) { // เครือ
                                                                        programeStatus = referController.refer_sumDeduct_clinicAndHospital(setInputFormReport());
                                                                    } else {
                                                                        programeStatus = referController.refer_sumDeduct(setInputFormReport());
                                                                    }
                                                                } else { // จ่าย

                                                                    programeStatus = referController.refer_sumPayment(setInputFormReport());
                                                                }
                                                                if (programeStatus.getProcessStatus()) {
                                                                    JOptionPane.showMessageDialog(UiReportHCBegin28062015.this,
                                                                            programeStatus.getMessage(),
                                                                            programeStatus.getTitle(),
                                                                            JOptionPane.INFORMATION_MESSAGE);
                                                                    baseFunction.openDirectoryAutomatic(setInputFormReport().getPathFile());
                                                                } else {
                                                                    JOptionPane.showMessageDialog(UiReportHCBegin28062015.this,
                                                                            programeStatus.getMessage(),
                                                                            programeStatus.getTitle(),
                                                                            JOptionPane.ERROR_MESSAGE);
                                                                }*/
                                                            }
                                                            wait.setVisible(false);
                                                        } catch (Exception e) {
                                                            e.printStackTrace();
                                                        }
                                                         /*
                                            * 17-08-2015
                                            */
                                            /*try {
                                                            new LogAppController().createLog("ทำการออกรายงาน", "ทำการออกรายงาน oprefer แบบ บางฟังก์ชั่นการทำงาน ", NetUtils.getIpAddress(), 1);
                                                        } catch (UnknownHostException ex) {
                                                            Logger.getLogger(UiMainClaim.class.getName()).log(Level.SEVERE, null, ex);
                                                        }*/
                                                    }
                                                });
                                                thread.start();
                                            }

                                        } else {
                                            JOptionPane.showMessageDialog(this,
                                                    Constants.MSG_FILE_LOCATION_PLEASE,
                                                    Constants.MSG_FILE_LOCATION,
                                                    JOptionPane.ERROR_MESSAGE);
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(this,
                                                Constants.MSG_HOSPITAL_TYPE,
                                                Constants.MSG_SELECT_DATA,
                                                JOptionPane.ERROR_MESSAGE);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this,
                                            Constants.MSG_REPORT_TYPE,
                                            Constants.MSG_SELECT_DATA,
                                            JOptionPane.ERROR_MESSAGE);
                                }
                            } else {
                                JOptionPane.showMessageDialog(this,
                                        Constants.MSG_HOSPITAL_SELECT_PLEASE,
                                        Constants.MSG_SELECT_DATA,
                                        JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this,
                                    Constants.MSG_HOSPITAL_ATTRIBUTE,
                                    Constants.MSG_SELECT_DATA,
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                Constants.MSG_REPOTR_FORMAT,
                                Constants.MSG_SELECT_DATA,
                                JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this,
                            Constants.MSG_SELECT_NO,
                            Constants.MSG_SELECT_NO,
                            JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this,
                        Constants.MSG_SELECT_DATE_PLEASE,
                        Constants.MSG_SELECT_DATA,
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnHCGenReportActionPerformed

    private void btnHCGenReportAllFunctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHCGenReportAllFunctionActionPerformed

        try {
            final DialogWaitProcess wait = new DialogWaitProcess();
            if (comboYearHC.getSelectedIndex() != 0) {
                if (comboNumHC.getSelectedIndex() != 0) {
                    if (radioAllHospitalHC.isSelected() || radioSingleHospitalHC.isSelected()) {
                        if (radioAllHospitalHC.isSelected() || radioSingleHospitalHC.isSelected() && listSelectHospital.size() > 0) {
                            if (!txtPathFileHC.getText().isEmpty()) {
                                int selectOption = JOptionPane.showConfirmDialog(null,
                                        Constants.MSG_REPORT_CONFIRM,
                                        Constants.MSG_REPORT_INFOMATION, JOptionPane.YES_NO_OPTION);
                                if (selectOption == JOptionPane.YES_OPTION) {
                                    wait.setVisible(true);

                                    Thread thread = new Thread(new Runnable() {
                                        @Override
                                        public void run() {
                                            ProgrameStatus programeStatus = new ProgrameStatus();
                                            try {
                                                wait.setTitle(Constants.MSG_PROGRAME_PROCESSSING);
                                                /*programeStatus = referController.refer_genReportAllFunction(setInputFormReport());
                                                if (programeStatus.getProcessStatus()) {
                                                    JOptionPane.showMessageDialog(UiReportHCBegin28062015.this,
                                                            programeStatus.getMessage(),
                                                            programeStatus.getTitle(),
                                                            JOptionPane.INFORMATION_MESSAGE);
                                                    new BaseFunction().openDirectoryAutomatic(setInputFormReport().getPathFile());

                                                } else {
                                                    JOptionPane.showMessageDialog(UiReportHCBegin28062015.this,
                                                            programeStatus.getMessage(),
                                                            programeStatus.getTitle(),
                                                            JOptionPane.ERROR_MESSAGE);
                                                }*/
                                                wait.setVisible(false);
                                            } catch (Exception e) {
                                                e.printStackTrace();
                                            }
                                             /*
                                            * 17-08-2015
                                            */
                                            /*try {
                                                new LogAppController().createLog("ทำการออกรายงาน", "ทำการออกรายงาน oprefer แบบ ฟังก์ชั้นการทำงานทั้งหมด ", NetUtils.getIpAddress(), 1);
                                            } catch (UnknownHostException ex) {
                                                Logger.getLogger(UiMainClaim.class.getName()).log(Level.SEVERE, null, ex);
                                            }*/
                                        }
                                    });
                                    thread.start();
                                }
                            } else {
                                JOptionPane.showMessageDialog(this,
                                        Constants.MSG_FILE_LOCATION_PLEASE,
                                        Constants.MSG_FILE_LOCATION,
                                        JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this,
                                    Constants.MSG_HOSPITAL_SELECT_PLEASE,
                                    Constants.MSG_SELECT_DATA,
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                Constants.MSG_HOSPITAL_ATTRIBUTE, Constants.MSG_SELECT_DATA, JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this,
                            Constants.MSG_SELECT_NO,
                            Constants.MSG_SELECT_DATA,
                            JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this,
                        Constants.MSG_SELECT_NO_FOR_PAYMENT,
                        Constants.MSG_SELECT_DATA,
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnHCGenReportAllFunctionActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        PROCESS = 0;
    }//GEN-LAST:event_formInternalFrameClosed
    public OppReport setInputFormReport() {
        OppReport report = new OppReport();        
        report.setYearMonth(comboYearHC.getSelectedItem().toString());
        report.setNo(comboNumHC.getSelectedItem().toString());
        report.setPathFile(txtPathFileHC.getText());
        if (radioDetailHC.isSelected()) {
            report.setReportType(0);
        } else {
            report.setReportType(1);
        }
        if (radioSingleHospitalHC.isSelected()) {
            //report.setServiceCode(txtHCodeOpaeRefer.getText());
            report.setListServiceCode(listSelectHospital);
        }
        if (radioAttributeAllHC.isSelected()) {
            report.setAttribute('A'); // All
        } else if (radioAttributeSingleHC.isSelected()) {
            report.setAttribute('S'); // Single
        } else if (radioAttributeHC.isSelected()) {
            report.setAttribute('N'); // Not All And Not Single
        }
        if (radioDeductHC.isSelected()) {
            report.setCategory('D'); // Deduct
        } else {
            report.setCategory('P'); // payment
        }
        report.setMonth(baseFunction.subStringYearMonth(comboYearHC.getSelectedItem().toString()).get("M").toString());
        report.setYear(baseFunction.subStringYearMonth(comboYearHC.getSelectedItem().toString()).get("Y").toString());
        report.setTitle2(txtTitleTimeHC.getText());
        if (radioForUse_Genaral.isSelected()) {
            report.setFor_use(0);
        } else if (radioForUse_Website.isSelected()) {
            report.setFor_use(1);
        }
        if (comboLookupYear.getSelectedIndex() == 0) {
            //report.setBudget_year("");            
        } else {
            report.setBudget_year(String.valueOf(comboLookupYear.getSelectedItem()));
        }
        report.setBudget_stmp(report.getYearMonth()+"-"+report.getNo());
        return report;
    }

    public void loadCombo() {
        try {
            //Tab Refer
            // get STmp From Table Rpt_Opbkk_refer
            comboYearHC.removeAllItems();
            comboYearHC.addItem("-");
            listStmpRefer = new UtilDao().getStmpDistinct("RPT_OPBKK_OPREFER", "STMP");

            List<String> listRefer = new ArrayList<String>();

            for (int i = 0; i < listStmpRefer.size(); i++) {
                listRefer.add(listStmpRefer.get(i).getStmpYM());
            }
            listRefer = CollectionUtil.removeDuplicatObjectOfList(listRefer);
            
            Collections.sort(listRefer);
            for (String string : listRefer) {
                comboYearHC.addItem(string);
            }
        } catch (Exception e) {
            e.printStackTrace();
            Console.LOG(e.getMessage(), 0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHCChooseHospital;
    private javax.swing.JButton btnHCGenReport;
    private javax.swing.JButton btnHCGenReportAllFunction;
    private javax.swing.JButton btnHCPathFile;
    private javax.swing.JButton btnHCPathFileDesktop;
    private javax.swing.JComboBox comboLookupYear;
    private javax.swing.JComboBox comboNumHC;
    private javax.swing.JComboBox comboYearHC;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.ButtonGroup rGroupReferAttribute;
    private javax.swing.ButtonGroup rGroupReferCategory;
    private javax.swing.ButtonGroup rGroupReferForUse;
    private javax.swing.ButtonGroup rGroupReferHospital;
    private javax.swing.ButtonGroup rGroupReferSpecial;
    private javax.swing.ButtonGroup rGroupReferType;
    private javax.swing.JRadioButton radioAllHospitalHC;
    private javax.swing.JRadioButton radioAttributeAllHC;
    private javax.swing.JRadioButton radioAttributeHC;
    private javax.swing.JRadioButton radioAttributeSingleHC;
    private javax.swing.JRadioButton radioDeductHC;
    private javax.swing.JRadioButton radioDetailHC;
    private javax.swing.JRadioButton radioForUse_Genaral;
    private javax.swing.JRadioButton radioForUse_Website;
    private javax.swing.JRadioButton radioPaymentHC;
    private javax.swing.JRadioButton radioSingleHospitalHC;
    private javax.swing.JRadioButton radioSumHC;
    private javax.swing.JRadioButton radio_special_HC_1;
    private javax.swing.JRadioButton radio_special_HC_all;
    private javax.swing.JPanel tabHC;
    private javax.swing.JTextArea txtHnameHc;
    private javax.swing.JTextField txtPathFileHC;
    private javax.swing.JTextField txtTitleTimeHC;
    // End of variables declaration//GEN-END:variables
}
