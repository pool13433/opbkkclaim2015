/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.claim.ui;

import com.claim.controller.Vajira11535Controller;
import com.claim.controller.VajiraHCController;
import com.claim.controller.VajiraRFController;
import com.claim.dao.UtilDao;
import com.claim.object.HospitalService;
import com.claim.object.OppReport;
import com.claim.object.Stmp;
import com.claim.support.FunctionUtil;
import com.claim.support.Console;
import com.claim.constants.ConstantMessage;
import com.claim.constants.ConstantVajira;
import com.claim.object.ProgrameStatus;
import com.claim.dialog.DialogWaitProcess;
import com.claim.support.CollectionUtil;
import com.claim.support.FileUtil;
import java.awt.event.ItemEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Poolsawat.a Create at 21-08-2015
 */
public class UiReportVajira extends javax.swing.JInternalFrame {

    /**
     * Creates new form UiReportRefer
     */
    public static int PROCESS = 0;
    VajiraHCController hcController;
    List<HospitalService> listSelectHospital = null;
    List<Stmp> listStmpHc = null;
    FunctionUtil baseFunction;

    public UiReportVajira() {
        initComponents();
        hcController = new VajiraHCController();
        listSelectHospital = new ArrayList<HospitalService>();
        listStmpHc = new ArrayList<Stmp>();
        baseFunction = new FunctionUtil();

        this.loadComboReport();

        PROCESS = 1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rGroupHCType = new javax.swing.ButtonGroup();
        rGroupHCHospital = new javax.swing.ButtonGroup();
        rGroupHCAttribute = new javax.swing.ButtonGroup();
        rGroupHCForUse = new javax.swing.ButtonGroup();
        rGroupHCSpecial = new javax.swing.ButtonGroup();
        rGroupHC = new javax.swing.ButtonGroup();
        tabHC = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        comboYearVajira = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        comboNumVajira = new javax.swing.JComboBox();
        jPanel28 = new javax.swing.JPanel();
        radioDetailVajira = new javax.swing.JRadioButton();
        radioSumVajira = new javax.swing.JRadioButton();
        jPanel29 = new javax.swing.JPanel();
        radioAllHospitalVajira = new javax.swing.JRadioButton();
        radioSingleHospitalVajira = new javax.swing.JRadioButton();
        btnVajiraChooseHospital = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtHnameVajira = new javax.swing.JTextArea();
        jPanel30 = new javax.swing.JPanel();
        btnVajiraPathFile = new javax.swing.JButton();
        txtPathFileVajira = new javax.swing.JTextField();
        btnVajiraPathFileDesktop = new javax.swing.JButton();
        jPanel35 = new javax.swing.JPanel();
        txtTitleTimeVajira = new javax.swing.JTextField();
        jPanel33 = new javax.swing.JPanel();
        comboHcReportType = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnVajiraGenReport = new javax.swing.JButton();
        btnVajiraGenReportAllFunction = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        radioForUse_Genaral = new javax.swing.JRadioButton();
        radioForUse_Website = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        comboLookupYear = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("หน้าจอออกรายงาน รายงาน OPศบส.- วชิรฯ");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/Excel-icon.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 550));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        tabHC.setPreferredSize(new java.awt.Dimension(1000, 550));
        tabHC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "งวดการจ่ายเงิน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 20))); // NOI18N
        jPanel27.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        jLabel7.setText("ปีเดือน");

        comboYearVajira.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        comboYearVajira.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboYearVajiraItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        jLabel8.setText("งวดที่");

        comboNumVajira.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        comboNumVajira.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboNumVajiraItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboYearVajira, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(comboNumVajira, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboYearVajira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(comboNumVajira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        jPanel28.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "รูปแบบ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 22))); // NOI18N

        rGroupHCType.add(radioDetailVajira);
        radioDetailVajira.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        radioDetailVajira.setText("รายงานแบบรายละเอียด");

        rGroupHCType.add(radioSumVajira);
        radioSumVajira.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        radioSumVajira.setText("รายงานแบบสรุป");
        radioSumVajira.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioSumVajiraItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(radioDetailVajira)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(radioSumVajira)
                .addGap(63, 63, 63))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioDetailVajira)
                    .addComponent(radioSumVajira))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "หน่วยให้บริการ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 18))); // NOI18N
        jPanel29.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rGroupHCHospital.add(radioAllHospitalVajira);
        radioAllHospitalVajira.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radioAllHospitalVajira.setSelected(true);
        radioAllHospitalVajira.setText("หน่วยให้บริการทั้งหมด");
        radioAllHospitalVajira.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioAllHospitalVajiraItemStateChanged(evt);
            }
        });
        jPanel29.add(radioAllHospitalVajira, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        rGroupHCHospital.add(radioSingleHospitalVajira);
        radioSingleHospitalVajira.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        radioSingleHospitalVajira.setText("เลือกบางหน่วยให้บริการ");
        radioSingleHospitalVajira.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioSingleHospitalVajiraItemStateChanged(evt);
            }
        });
        jPanel29.add(radioSingleHospitalVajira, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        btnVajiraChooseHospital.setFont(new java.awt.Font("TH SarabunPSK", 1, 18)); // NOI18N
        btnVajiraChooseHospital.setText("เลือก");
        btnVajiraChooseHospital.setEnabled(false);
        btnVajiraChooseHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVajiraChooseHospitalActionPerformed(evt);
            }
        });
        jPanel29.add(btnVajiraChooseHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        txtHnameVajira.setColumns(20);
        txtHnameVajira.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtHnameVajira.setLineWrap(true);
        txtHnameVajira.setRows(5);
        txtHnameVajira.setEnabled(false);
        jScrollPane11.setViewportView(txtHnameVajira);

        jPanel29.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 550, 90));

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "สถานที่เก็บไฟล์", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 18))); // NOI18N

        btnVajiraPathFile.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        btnVajiraPathFile.setText("เลือก");
        btnVajiraPathFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVajiraPathFileActionPerformed(evt);
            }
        });

        txtPathFileVajira.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        txtPathFileVajira.setEnabled(false);

        btnVajiraPathFileDesktop.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        btnVajiraPathFileDesktop.setText("desktop");
        btnVajiraPathFileDesktop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVajiraPathFileDesktopjButtonFolderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVajiraPathFileDesktop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVajiraPathFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPathFileVajira, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVajiraPathFile)
                    .addComponent(txtPathFileVajira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVajiraPathFileDesktop))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ตัวอย่างแสดงงวด หัวรายงาน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 18))); // NOI18N
        jPanel35.setPreferredSize(new java.awt.Dimension(972, 83));

        txtTitleTimeVajira.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(txtTitleTimeVajira, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTitleTimeVajira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel33.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ประเภทรายงาน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("TH SarabunPSK", 1, 24))); // NOI18N

        comboHcReportType.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        comboHcReportType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboHcReportTypeItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        jLabel1.setText("เลือกประเภทรายงาน");

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(comboHcReportType, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboHcReportType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, 864, Short.MAX_VALUE)
                    .addComponent(jPanel30, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel33, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        tabHC.add(jPanel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 900, 540));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "เครื่องมือการออกรายงาน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(215, 445));

        btnVajiraGenReport.setBackground(new java.awt.Color(153, 153, 255));
        btnVajiraGenReport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnVajiraGenReport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/Print-icon.png"))); // NOI18N
        btnVajiraGenReport.setText("ออกรายงาน");
        btnVajiraGenReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVajiraGenReportActionPerformed(evt);
            }
        });

        btnVajiraGenReportAllFunction.setBackground(new java.awt.Color(255, 204, 0));
        btnVajiraGenReportAllFunction.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnVajiraGenReportAllFunction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/claim/util/images/Print-icon.png"))); // NOI18N
        btnVajiraGenReportAllFunction.setText("<html>ออกรายงานทุกอย่าง<br />+ Website</html>");
        btnVajiraGenReportAllFunction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVajiraGenReportAllFunctionActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ใช้เพื่อ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        rGroupHCForUse.add(radioForUse_Genaral);
        radioForUse_Genaral.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        radioForUse_Genaral.setSelected(true);
        radioForUse_Genaral.setText("ทั่วไป");

        rGroupHCForUse.add(radioForUse_Website);
        radioForUse_Website.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        radioForUse_Website.setText("อัพโหลด web site");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioForUse_Genaral)
                    .addComponent(radioForUse_Website))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioForUse_Genaral)
                .addGap(26, 26, 26)
                .addComponent(radioForUse_Website)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ข้อมูลปีการออกรายงาน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        comboLookupYear.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        comboLookupYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "รวมทุกปีงบ", "2015", "2014", "2013", "2012", "2011", "2010" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(comboLookupYear, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboLookupYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnVajiraGenReport, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVajiraGenReportAllFunction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(btnVajiraGenReport, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnVajiraGenReportAllFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabHC.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 0, 240, 450));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabHC, javax.swing.GroupLayout.PREFERRED_SIZE, 1074, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tabHC, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboYearVajiraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboYearVajiraItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            comboNumVajira.removeAllItems();
            if (comboYearVajira.getSelectedIndex() > 0) {
                if (comboYearVajira.getItemCount() > 0 && comboNumVajira.getItemCount() > 0) {
                    String year = comboYearVajira.getSelectedItem().toString();
                    String month = comboNumVajira.getSelectedItem().toString();

                    String title = baseFunction.getTitleTimeReport(year, month);
                    txtTitleTimeVajira.setText(title);
                }

                comboNumVajira.addItem("-");
                for (Stmp stmp : listStmpHc) {
                    //System.out.println("comboYearOpaeIndv.getSelectedItem()++"+comboYearOpaeIndv.getSelectedItem());
                    //System.out.println("stmp.getStmpYM()++"+stmp.getStmpYM());
                    if (comboYearVajira.getSelectedItem().equals(stmp.getStmpYM())
                            && comboNumVajira.getSelectedItem() != stmp.getStmpN()) {
                        comboNumVajira.addItem(stmp.getStmpN());
                    }
                }
            } else {

            }
        }
    }//GEN-LAST:event_comboYearVajiraItemStateChanged

    private void comboNumVajiraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboNumVajiraItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (PROCESS == 1 && comboHcReportType.getSelectedIndex() > 0) {
                if (comboYearVajira.getSelectedIndex() > 0 || comboNumVajira.getSelectedIndex() > 0) {
                    txtTitleTimeVajira.setText(baseFunction.getTitleTimeReport(comboYearVajira.getSelectedItem().toString(), comboNumVajira.getSelectedItem().toString()));
                }
            }
        }
    }//GEN-LAST:event_comboNumVajiraItemStateChanged

    private void radioSumVajiraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioSumVajiraItemStateChanged
        if (radioSumVajira.isSelected()) {
            radioAllHospitalVajira.setSelected(true);
            radioSingleHospitalVajira.setEnabled(false);
            btnVajiraChooseHospital.setEnabled(false);
        } else {
            radioSingleHospitalVajira.setEnabled(true);
            //btnReferChooseHospital.setEnabled(true);
        }
    }//GEN-LAST:event_radioSumVajiraItemStateChanged

    private void radioAllHospitalVajiraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioAllHospitalVajiraItemStateChanged
        if (radioAllHospitalVajira.isSelected()) {
            btnVajiraChooseHospital.setEnabled(false);
            //txtHCodeOpaeRefer.setText("");
            txtHnameVajira.setText("");
        } else {
            radioAllHospitalVajira.setEnabled(true);
        }
    }//GEN-LAST:event_radioAllHospitalVajiraItemStateChanged

    private void radioSingleHospitalVajiraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioSingleHospitalVajiraItemStateChanged
        if (radioSingleHospitalVajira.isSelected()) {
            btnVajiraChooseHospital.setEnabled(true);
        } else {
            radioSingleHospitalVajira.setEnabled(true);
        }
    }//GEN-LAST:event_radioSingleHospitalVajiraItemStateChanged

    private void btnVajiraChooseHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVajiraChooseHospitalActionPerformed
        txtHnameVajira.setText("");
        HashMap mapParam = new HashMap();
        mapParam.put("type", "oprefer");
        //mapParam.put("code", txtHCodeOpaeRefer);
        mapParam.put("name", txtHnameVajira);
        mapParam.put("listHospital", listSelectHospital);
        DialogService dialog = new DialogService();
        dialog.DialogServiceJInternalFrame(this, closable, mapParam);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnVajiraChooseHospitalActionPerformed

    private void btnVajiraPathFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVajiraPathFileActionPerformed
        try {
            JFileChooser fc = new JFileChooser();
            fc.setDialogTitle("Open Folder");
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            fc.setCurrentDirectory(new File(""));
            int result = fc.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File a = fc.getSelectedFile();
                // Path File method in this class
                String temp = a.getPath();
                txtPathFileVajira.setText(".");

                if (temp != null) {
                    txtPathFileVajira.setText(temp);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnVajiraPathFileActionPerformed

    private void btnVajiraPathFileDesktopjButtonFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVajiraPathFileDesktopjButtonFolderActionPerformed
        txtPathFileVajira.setText(FileUtil.getPathDesktop());
    }//GEN-LAST:event_btnVajiraPathFileDesktopjButtonFolderActionPerformed

    private void btnVajiraGenReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVajiraGenReportActionPerformed
        final DialogWaitProcess wait = new DialogWaitProcess();

        try {
            if (comboHcReportType.getSelectedIndex() > 0) {
                if (comboYearVajira.getSelectedIndex() != 0) { // check combo stmp year
                    if (comboNumVajira.getSelectedIndex() != 0) { // check combo Number
                        if (radioDetailVajira.isSelected() || radioSumVajira.isSelected()) { // check radio detail || summary
                            if (radioAllHospitalVajira.isSelected() || radioSingleHospitalVajira.isSelected()) { // check รูปแบบหน่วยบริการ ฟังก์ชั้นการทำงานทั้งหมดหรือเดี่ยว
                                if (radioAllHospitalVajira.isSelected() || radioSingleHospitalVajira.isSelected() && listSelectHospital.size() > 0) {
                                    if (!txtPathFileVajira.getText().isEmpty()) {
                                        int selectOption = JOptionPane.showConfirmDialog(null,
                                                ConstantMessage.MSG_REPORT_CONFIRM,
                                                ConstantMessage.MSG_REPORT_INFOMATION, JOptionPane.YES_NO_OPTION);
                                        if (selectOption == JOptionPane.YES_OPTION) {
                                            wait.setVisible(true);

                                            Thread thread = new Thread(new Runnable() {
                                                @Override
                                                public void run() {
                                                    ProgrameStatus programeStatus = new ProgrameStatus();

                                                    try {
                                                        wait.setTitle(ConstantMessage.MSG_PROGRAME_PROCESSSING);
                                                        OppReport report = setInputFormReport();
                                                        if (radioDetailVajira.isSelected()) { // รายละเอียด

                                                            if (report.getVajira().equals(ConstantVajira.VAJIRA_11535)) {
                                                                programeStatus = new Vajira11535Controller().hc11535ByHmain(report);
                                                            } else if (report.getVajira().equals(ConstantVajira.VAJIRA_RF)) {
                                                                programeStatus = new VajiraRFController().hcREByHcode(report);
                                                            } else if (report.getVajira().equals(ConstantVajira.VAJIRA_HC)) {
                                                                programeStatus = new VajiraHCController().hcHCByHmain(report);
                                                            }
                                                        } else { // สรุป
                                                            // programeStatus = vajiraHCController.hcHcSummary(report);
                                                            if (report.getVajira().equals(ConstantVajira.VAJIRA_11535)) {
                                                                programeStatus = new Vajira11535Controller().hc11535Summary(report);
                                                            } else if (report.getVajira().equals(ConstantVajira.VAJIRA_RF)) {
                                                                programeStatus = new VajiraRFController().hcRFSummary(report);
                                                            } else if (report.getVajira().equals(ConstantVajira.VAJIRA_HC)) {
                                                                programeStatus = new VajiraHCController().hcHcSummary(report);
                                                            }
                                                        }

                                                        if (programeStatus.getProcessStatus()) {
                                                            JOptionPane.showMessageDialog(UiReportVajira.this,
                                                                    programeStatus.getMessage(),
                                                                    programeStatus.getTitle(),
                                                                    JOptionPane.INFORMATION_MESSAGE);
                                                            baseFunction.openDirectoryAutomatic(setInputFormReport().getPathFile());
                                                        } else {
                                                            JOptionPane.showMessageDialog(UiReportVajira.this,
                                                                    programeStatus.getMessage(),
                                                                    programeStatus.getTitle(),
                                                                    JOptionPane.ERROR_MESSAGE);
                                                        }
                                                        wait.setVisible(false);
                                                    } catch (Exception e) {
                                                        e.printStackTrace();
                                                    }
                                                }
                                            });
                                            thread.start();
                                        }

                                    } else {
                                        JOptionPane.showMessageDialog(this,
                                                ConstantMessage.MSG_FILE_LOCATION_PLEASE,
                                                ConstantMessage.MSG_FILE_LOCATION,
                                                JOptionPane.ERROR_MESSAGE);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this,
                                            ConstantMessage.MSG_HOSPITAL_SELECT_PLEASE,
                                            ConstantMessage.MSG_SELECT_DATA,
                                            JOptionPane.ERROR_MESSAGE);
                                }
                            } else {
                                JOptionPane.showMessageDialog(this,
                                        ConstantMessage.MSG_HOSPITAL_ATTRIBUTE,
                                        ConstantMessage.MSG_SELECT_DATA,
                                        JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this,
                                    ConstantMessage.MSG_REPOTR_FORMAT,
                                    ConstantMessage.MSG_SELECT_DATA,
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                ConstantMessage.MSG_SELECT_NO,
                                ConstantMessage.MSG_SELECT_NO,
                                JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this,
                            ConstantMessage.MSG_SELECT_DATE_PLEASE,
                            ConstantMessage.MSG_SELECT_DATA,
                            JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this,
                        ConstantMessage.MSG_SELECT_REPORT_TYPE,
                        ConstantMessage.MSG_SELECT_DATA,
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnVajiraGenReportActionPerformed

    private void btnVajiraGenReportAllFunctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVajiraGenReportAllFunctionActionPerformed

        try {
            final DialogWaitProcess wait = new DialogWaitProcess();
            if (comboYearVajira.getSelectedIndex() != 0) {
                if (comboNumVajira.getSelectedIndex() != 0) {
                    if (radioAllHospitalVajira.isSelected() || radioSingleHospitalVajira.isSelected()) {
                        if (radioAllHospitalVajira.isSelected() || radioSingleHospitalVajira.isSelected() && listSelectHospital.size() > 0) {
                            if (!txtPathFileVajira.getText().isEmpty()) {
                                int selectOption = JOptionPane.showConfirmDialog(null,
                                        ConstantMessage.MSG_REPORT_CONFIRM,
                                        ConstantMessage.MSG_REPORT_INFOMATION, JOptionPane.YES_NO_OPTION);
                                if (selectOption == JOptionPane.YES_OPTION) {
                                    wait.setVisible(true);

                                    Thread thread = new Thread(new Runnable() {
                                        @Override
                                        public void run() {
                                            ProgrameStatus programeStatus = new ProgrameStatus();
                                            OppReport report = setInputFormReport();
                                            try {
                                                wait.setTitle(ConstantMessage.MSG_PROGRAME_PROCESSSING);
                                                if (report.getVajira().equals(ConstantVajira.VAJIRA_11535)) {
                                                    programeStatus = new Vajira11535Controller().hc_genReportAllFunction(report);
                                                } else if (report.getVajira().equals(ConstantVajira.VAJIRA_RF)) {
                                                    programeStatus = new VajiraRFController().hc_genReportAllFunction(report);
                                                } else if (report.getVajira().equals(ConstantVajira.VAJIRA_HC)) {
                                                    programeStatus = new VajiraHCController().hc_genReportAllFunction(report);
                                                }
                                                if (programeStatus.getProcessStatus()) {
                                                    JOptionPane.showMessageDialog(UiReportVajira.this,
                                                            programeStatus.getMessage(),
                                                            programeStatus.getTitle(),
                                                            JOptionPane.INFORMATION_MESSAGE);
                                                    new FunctionUtil().openDirectoryAutomatic(setInputFormReport().getPathFile());

                                                } else {
                                                    JOptionPane.showMessageDialog(UiReportVajira.this,
                                                            programeStatus.getMessage(),
                                                            programeStatus.getTitle(),
                                                            JOptionPane.ERROR_MESSAGE);
                                                }
                                                wait.setVisible(false);
                                            } catch (Exception e) {
                                                e.printStackTrace();
                                            }
                                        }
                                    });
                                    thread.start();
                                }
                            } else {
                                JOptionPane.showMessageDialog(this,
                                        ConstantMessage.MSG_FILE_LOCATION_PLEASE,
                                        ConstantMessage.MSG_FILE_LOCATION,
                                        JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this,
                                    ConstantMessage.MSG_HOSPITAL_SELECT_PLEASE,
                                    ConstantMessage.MSG_SELECT_DATA,
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this,
                                ConstantMessage.MSG_HOSPITAL_ATTRIBUTE, ConstantMessage.MSG_SELECT_DATA, JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this,
                            ConstantMessage.MSG_SELECT_NO,
                            ConstantMessage.MSG_SELECT_DATA,
                            JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this,
                        ConstantMessage.MSG_SELECT_NO_FOR_PAYMENT,
                        ConstantMessage.MSG_SELECT_DATA,
                        JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnVajiraGenReportAllFunctionActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        PROCESS = 0;
    }//GEN-LAST:event_formInternalFrameClosed

    private void comboHcReportTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboHcReportTypeItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (comboHcReportType.getSelectedIndex() > 0) {
                loadComboStmp(comboHcReportType.getSelectedIndex());
            } else {
                loadComboStmp(0);
                Console.LOG("กรุณาเลือกประเภทรายงาน", 0);
            }
        }
    }//GEN-LAST:event_comboHcReportTypeItemStateChanged
    public OppReport setInputFormReport() {
        OppReport report = new OppReport();
        report.setYearMonth(comboYearVajira.getSelectedItem().toString());
        report.setNo(comboNumVajira.getSelectedItem().toString());
        report.setPathFile(txtPathFileVajira.getText());
        if (radioDetailVajira.isSelected()) {
            report.setReportType(0);
        } else {
            report.setReportType(1);
        }
        if (radioSingleHospitalVajira.isSelected()) {
            //report.setServiceCode(txtHCodeOpaeRefer.getText());
            report.setListServiceCode(listSelectHospital);
        }
        report.setMonth(baseFunction.subStringYearMonth(comboYearVajira.getSelectedItem().toString()).get("M").toString());
        report.setYear(baseFunction.subStringYearMonth(comboYearVajira.getSelectedItem().toString()).get("Y").toString());
        report.setTitle2(txtTitleTimeVajira.getText());
        if (radioForUse_Genaral.isSelected()) {
            report.setFor_use(0);
        } else if (radioForUse_Website.isSelected()) {
            report.setFor_use(1);
        }
        if (comboLookupYear.getSelectedIndex() == 0) {
            //report.setBudget_year("");            
        } else {
            report.setBudget_year(String.valueOf(comboLookupYear.getSelectedItem()));
        }
        if (comboHcReportType.getSelectedIndex() == 1) {
            report.setVajira(ConstantVajira.VAJIRA_11535);  //"HC วชิรพยาบาล ฯ รักษา",
        } else if (comboHcReportType.getSelectedIndex() == 2) {
            report.setVajira(ConstantVajira.VAJIRA_RF); // "HC ส่งต่อที่อื่น",
        } else if (comboHcReportType.getSelectedIndex() == 3) {
            report.setVajira(ConstantVajira.VAJIRA_HC);  //"HC ศูนย์บริการ สาธารณะสุข"
        } else {
            report.setVajira("");
        }
        report.setStmp(report.getYearMonth() + "-" + report.getNo());
        report.setBudget_stmp(report.getYearMonth() + "-" + report.getNo());
        report.setTitle2(txtTitleTimeVajira.getText());
        return report;
    }

    public void loadComboReport() {
        comboHcReportType.removeAllItems();
        String[] reportType = ConstantVajira.PROCE_CREATE_TABLE_HC;
        for (String report : reportType) {
            comboHcReportType.addItem(String.valueOf(report));
        }
    }

    public void loadComboStmp(int indexCombo) {
        try {
            //Tab Refer
            // get STmp From Table Rpt_Opbkk_refer
            comboYearVajira.removeAllItems();
            comboNumVajira.removeAllItems();
            if (indexCombo > 0) {
                comboYearVajira.addItem("-");
                listStmpHc = new UtilDao().getStmpDistinct(ConstantVajira.TABLE_HC_NAME[indexCombo], "STMP");

                List<String> listRefer = new ArrayList<String>();

                for (int i = 0; i < listStmpHc.size(); i++) {
                    listRefer.add(listStmpHc.get(i).getStmpYM());
                }
                listRefer = CollectionUtil.removeDuplicatObjectOfList(listRefer);

                Collections.sort(listRefer);
                for (String string : listRefer) {
                    comboYearVajira.addItem(string);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            Console.LOG(e.getMessage(), 0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVajiraChooseHospital;
    private javax.swing.JButton btnVajiraGenReport;
    private javax.swing.JButton btnVajiraGenReportAllFunction;
    private javax.swing.JButton btnVajiraPathFile;
    private javax.swing.JButton btnVajiraPathFileDesktop;
    private javax.swing.JComboBox comboHcReportType;
    private javax.swing.JComboBox comboLookupYear;
    private javax.swing.JComboBox comboNumVajira;
    private javax.swing.JComboBox comboYearVajira;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.ButtonGroup rGroupHC;
    private javax.swing.ButtonGroup rGroupHCAttribute;
    private javax.swing.ButtonGroup rGroupHCForUse;
    private javax.swing.ButtonGroup rGroupHCHospital;
    private javax.swing.ButtonGroup rGroupHCSpecial;
    private javax.swing.ButtonGroup rGroupHCType;
    private javax.swing.JRadioButton radioAllHospitalVajira;
    private javax.swing.JRadioButton radioDetailVajira;
    private javax.swing.JRadioButton radioForUse_Genaral;
    private javax.swing.JRadioButton radioForUse_Website;
    private javax.swing.JRadioButton radioSingleHospitalVajira;
    private javax.swing.JRadioButton radioSumVajira;
    private javax.swing.JPanel tabHC;
    private javax.swing.JTextArea txtHnameVajira;
    private javax.swing.JTextField txtPathFileVajira;
    private javax.swing.JTextField txtTitleTimeVajira;
    // End of variables declaration//GEN-END:variables
}
